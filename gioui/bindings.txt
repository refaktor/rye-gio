# This file contains a list of bindings, which can be enabled/disabled by placing them under the according section.
# Re-run `go generate ./...` to update and sort the list.

[enabled]
Go(*app.Config)//custom-renderer!                  "Set *app.Config CustomRenderer value"
Go(*app.Config)//custom-renderer?                  "Get *app.Config CustomRenderer value"
Go(*app.Config)//decorated!                        "Set *app.Config Decorated value"
Go(*app.Config)//decorated?                        "Get *app.Config Decorated value"
Go(*app.Config)//focused!                          "Set *app.Config Focused value"
Go(*app.Config)//focused?                          "Get *app.Config Focused value"
Go(*app.Config)//max-size!                         "Set *app.Config MaxSize value"
Go(*app.Config)//max-size?                         "Get *app.Config MaxSize value"
Go(*app.Config)//min-size!                         "Set *app.Config MinSize value"
Go(*app.Config)//min-size?                         "Get *app.Config MinSize value"
Go(*app.Config)//mode!                             "Set *app.Config Mode value"
Go(*app.Config)//mode?                             "Get *app.Config Mode value"
Go(*app.Config)//navigation-color!                 "Set *app.Config NavigationColor value"
Go(*app.Config)//navigation-color?                 "Get *app.Config NavigationColor value"
Go(*app.Config)//orientation!                      "Set *app.Config Orientation value"
Go(*app.Config)//orientation?                      "Get *app.Config Orientation value"
Go(*app.Config)//size!                             "Set *app.Config Size value"
Go(*app.Config)//size?                             "Get *app.Config Size value"
Go(*app.Config)//status-color!                     "Set *app.Config StatusColor value"
Go(*app.Config)//status-color?                     "Get *app.Config StatusColor value"
Go(*app.Config)//title!                            "Set *app.Config Title value"
Go(*app.Config)//title?                            "Get *app.Config Title value"
Go(*app.ConfigEvent)//config!                      "Set *app.ConfigEvent Config value"
Go(*app.ConfigEvent)//config?                      "Get *app.ConfigEvent Config value"
Go(*app.ConfigEvent)//implements-event             "app.ConfigEvent.ImplementsEvent"
Go(*app.DestroyEvent)//err!                        "Set *app.DestroyEvent Err value"
Go(*app.DestroyEvent)//err?                        "Get *app.DestroyEvent Err value"
Go(*app.DestroyEvent)//implements-event            "app.DestroyEvent.ImplementsEvent"
Go(*app.FrameEvent)//frame!                        "Set *app.FrameEvent Frame value"
Go(*app.FrameEvent)//frame?                        "Get *app.FrameEvent Frame value"
Go(*app.FrameEvent)//implements-event              "app.FrameEvent.ImplementsEvent"
Go(*app.FrameEvent)//insets!                       "Set *app.FrameEvent Insets value"
Go(*app.FrameEvent)//insets?                       "Get *app.FrameEvent Insets value"
Go(*app.FrameEvent)//metric!                       "Set *app.FrameEvent Metric value"
Go(*app.FrameEvent)//metric?                       "Get *app.FrameEvent Metric value"
Go(*app.FrameEvent)//now!                          "Set *app.FrameEvent Now value"
Go(*app.FrameEvent)//now?                          "Get *app.FrameEvent Now value"
Go(*app.FrameEvent)//size!                         "Set *app.FrameEvent Size value"
Go(*app.FrameEvent)//size?                         "Get *app.FrameEvent Size value"
Go(*app.FrameEvent)//source!                       "Set *app.FrameEvent Source value"
Go(*app.FrameEvent)//source?                       "Get *app.FrameEvent Source value"
Go(*app.Insets)//bottom!                           "Set *app.Insets Bottom value"
Go(*app.Insets)//bottom?                           "Get *app.Insets Bottom value"
Go(*app.Insets)//left!                             "Set *app.Insets Left value"
Go(*app.Insets)//left?                             "Get *app.Insets Left value"
Go(*app.Insets)//right!                            "Set *app.Insets Right value"
Go(*app.Insets)//right?                            "Get *app.Insets Right value"
Go(*app.Insets)//top!                              "Set *app.Insets Top value"
Go(*app.Insets)//top?                              "Get *app.Insets Top value"
Go(*app.Window)//event                             "(*app.Window).Event"
Go(*app.Window)//invalidate                        "(*app.Window).Invalidate"
Go(*app.Window)//option                            "(*app.Window).Option"
Go(*app.Window)//perform                           "(*app.Window).Perform"
Go(*app.Window)//run                               "(*app.Window).Run"
Go(*clip.Op)//push                                 "clip.Op.Push"
Go(*clip.Outline)//op                              "clip.Outline.Op"
Go(*clip.Outline)//path!                           "Set *clip.Outline Path value"
Go(*clip.Outline)//path?                           "Get *clip.Outline Path value"
Go(*clip.Path)//arc                                "(*clip.Path).Arc"
Go(*clip.Path)//arc-to                             "(*clip.Path).ArcTo"
Go(*clip.Path)//begin                              "(*clip.Path).Begin"
Go(*clip.Path)//close                              "(*clip.Path).Close"
Go(*clip.Path)//cube                               "(*clip.Path).Cube"
Go(*clip.Path)//cube-to                            "(*clip.Path).CubeTo"
Go(*clip.Path)//end                                "(*clip.Path).End"
Go(*clip.Path)//line                               "(*clip.Path).Line"
Go(*clip.Path)//line-to                            "(*clip.Path).LineTo"
Go(*clip.Path)//move                               "(*clip.Path).Move"
Go(*clip.Path)//move-to                            "(*clip.Path).MoveTo"
Go(*clip.Path)//pos                                "(*clip.Path).Pos"
Go(*clip.Path)//quad                               "(*clip.Path).Quad"
Go(*clip.Path)//quad-to                            "(*clip.Path).QuadTo"
Go(*clip.RRect)//ne!                               "Set *clip.RRect NE value"
Go(*clip.RRect)//ne?                               "Get *clip.RRect NE value"
Go(*clip.RRect)//nw!                               "Set *clip.RRect NW value"
Go(*clip.RRect)//nw?                               "Get *clip.RRect NW value"
Go(*clip.RRect)//op                                "clip.RRect.Op"
Go(*clip.RRect)//path                              "clip.RRect.Path"
Go(*clip.RRect)//push                              "clip.RRect.Push"
Go(*clip.RRect)//rect!                             "Set *clip.RRect Rect value"
Go(*clip.RRect)//rect?                             "Get *clip.RRect Rect value"
Go(*clip.RRect)//se!                               "Set *clip.RRect SE value"
Go(*clip.RRect)//se?                               "Get *clip.RRect SE value"
Go(*clip.RRect)//sw!                               "Set *clip.RRect SW value"
Go(*clip.RRect)//sw?                               "Get *clip.RRect SW value"
Go(*clip.Stack)//pop                               "clip.Stack.Pop"
Go(*clip.Stroke)//op                               "clip.Stroke.Op"
Go(*clip.Stroke)//path!                            "Set *clip.Stroke Path value"
Go(*clip.Stroke)//path?                            "Get *clip.Stroke Path value"
Go(*clip.Stroke)//width!                           "Set *clip.Stroke Width value"
Go(*clip.Stroke)//width?                           "Get *clip.Stroke Width value"
Go(*clipboard.ReadCmd)//implements-command         "clipboard.ReadCmd.ImplementsCommand"
Go(*clipboard.ReadCmd)//tag!                       "Set *clipboard.ReadCmd Tag value"
Go(*clipboard.ReadCmd)//tag?                       "Get *clipboard.ReadCmd Tag value"
Go(*clipboard.WriteCmd)//data!                     "Set *clipboard.WriteCmd Data value"
Go(*clipboard.WriteCmd)//data?                     "Get *clipboard.WriteCmd Data value"
Go(*clipboard.WriteCmd)//implements-command        "clipboard.WriteCmd.ImplementsCommand"
Go(*clipboard.WriteCmd)//type!                     "Set *clipboard.WriteCmd Type value"
Go(*clipboard.WriteCmd)//type?                     "Get *clipboard.WriteCmd Type value"
Go(*f32.Affine2D)//elems                           "f32.Affine2D.Elems"
Go(*f32.Affine2D)//invert                          "f32.Affine2D.Invert"
Go(*f32.Affine2D)//mul                             "f32.Affine2D.Mul"
Go(*f32.Affine2D)//offset                          "f32.Affine2D.Offset"
Go(*f32.Affine2D)//rotate                          "f32.Affine2D.Rotate"
Go(*f32.Affine2D)//scale                           "f32.Affine2D.Scale"
Go(*f32.Affine2D)//shear                           "f32.Affine2D.Shear"
Go(*f32.Affine2D)//split                           "(*f32.Affine2D).Split"
Go(*f32.Affine2D)//string                          "f32.Affine2D.String"
Go(*f32.Affine2D)//transform                       "f32.Affine2D.Transform"
Go(*f32.Point)//add                                "f32.Point.Add"
Go(*f32.Point)//div                                "f32.Point.Div"
Go(*f32.Point)//mul                                "f32.Point.Mul"
Go(*f32.Point)//round                              "f32.Point.Round"
Go(*f32.Point)//string                             "f32.Point.String"
Go(*f32.Point)//sub                                "f32.Point.Sub"
Go(*f32.Point)//x!                                 "Set *f32.Point X value"
Go(*f32.Point)//x?                                 "Get *f32.Point X value"
Go(*f32.Point)//y!                                 "Set *f32.Point Y value"
Go(*f32.Point)//y?                                 "Get *f32.Point Y value"
Go(*font.Font)//style!                             "Set *font.Font Style value"
Go(*font.Font)//style?                             "Get *font.Font Style value"
Go(*font.Font)//typeface!                          "Set *font.Font Typeface value"
Go(*font.Font)//typeface?                          "Get *font.Font Typeface value"
Go(*font.Font)//weight!                            "Set *font.Font Weight value"
Go(*font.Font)//weight?                            "Get *font.Font Weight value"
Go(*font.FontFace)//face!                          "Set *font.FontFace Face value"
Go(*font.FontFace)//face?                          "Get *font.FontFace Face value"
Go(*font.FontFace)//font!                          "Set *font.FontFace Font value"
Go(*font.FontFace)//font?                          "Get *font.FontFace Font value"
Go(*gesture.Click)//add                            "(*gesture.Click).Add"
Go(*gesture.Click)//hovered                        "(*gesture.Click).Hovered"
Go(*gesture.Click)//pressed                        "(*gesture.Click).Pressed"
Go(*gesture.Click)//update                         "(*gesture.Click).Update"
Go(*gesture.ClickEvent)//implements-event          "gesture.ClickEvent.ImplementsEvent"
Go(*gesture.ClickEvent)//kind!                     "Set *gesture.ClickEvent Kind value"
Go(*gesture.ClickEvent)//kind?                     "Get *gesture.ClickEvent Kind value"
Go(*gesture.ClickEvent)//modifiers!                "Set *gesture.ClickEvent Modifiers value"
Go(*gesture.ClickEvent)//modifiers?                "Get *gesture.ClickEvent Modifiers value"
Go(*gesture.ClickEvent)//num-clicks!               "Set *gesture.ClickEvent NumClicks value"
Go(*gesture.ClickEvent)//num-clicks?               "Get *gesture.ClickEvent NumClicks value"
Go(*gesture.ClickEvent)//position!                 "Set *gesture.ClickEvent Position value"
Go(*gesture.ClickEvent)//position?                 "Get *gesture.ClickEvent Position value"
Go(*gesture.ClickEvent)//source!                   "Set *gesture.ClickEvent Source value"
Go(*gesture.ClickEvent)//source?                   "Get *gesture.ClickEvent Source value"
Go(*gesture.Drag)//add                             "(*gesture.Drag).Add"
Go(*gesture.Drag)//dragging                        "(*gesture.Drag).Dragging"
Go(*gesture.Drag)//pressed                         "(*gesture.Drag).Pressed"
Go(*gesture.Drag)//update                          "(*gesture.Drag).Update"
Go(*gesture.Hover)//add                            "(*gesture.Hover).Add"
Go(*gesture.Hover)//update                         "(*gesture.Hover).Update"
Go(*gesture.Scroll)//add                           "(*gesture.Scroll).Add"
Go(*gesture.Scroll)//state                         "(*gesture.Scroll).State"
Go(*gesture.Scroll)//stop                          "(*gesture.Scroll).Stop"
Go(*headless.Window)//frame                        "(*headless.Window).Frame"
Go(*headless.Window)//release                      "(*headless.Window).Release"
Go(*headless.Window)//screenshot                   "(*headless.Window).Screenshot"
Go(*headless.Window)//size                         "(*headless.Window).Size"
Go(*input.EditorState)//selection!                 "Set *input.EditorState Selection value"
Go(*input.EditorState)//selection?                 "Get *input.EditorState Selection value"
Go(*input.EditorState)//snippet!                   "Set *input.EditorState Snippet value"
Go(*input.EditorState)//snippet?                   "Get *input.EditorState Snippet value"
Go(*input.Router)//action-at                       "(*input.Router).ActionAt"
Go(*input.Router)//append-semantics                "(*input.Router).AppendSemantics"
Go(*input.Router)//click-focus                     "(*input.Router).ClickFocus"
Go(*input.Router)//clipboard-requested             "(*input.Router).ClipboardRequested"
Go(*input.Router)//cursor                          "(*input.Router).Cursor"
Go(*input.Router)//editor-state                    "(*input.Router).EditorState"
Go(*input.Router)//event                           "(*input.Router).Event"
Go(*input.Router)//frame                           "(*input.Router).Frame"
Go(*input.Router)//move-focus                      "(*input.Router).MoveFocus"
Go(*input.Router)//queue                           "(*input.Router).Queue"
Go(*input.Router)//reveal-focus                    "(*input.Router).RevealFocus"
Go(*input.Router)//scroll-focus                    "(*input.Router).ScrollFocus"
Go(*input.Router)//semantic-at                     "(*input.Router).SemanticAt"
Go(*input.Router)//source                          "(*input.Router).Source"
Go(*input.Router)//text-input-hint                 "(*input.Router).TextInputHint"
Go(*input.Router)//text-input-state                "(*input.Router).TextInputState"
Go(*input.Router)//wakeup-time                     "(*input.Router).WakeupTime"
Go(*input.Router)//write-clipboard                 "(*input.Router).WriteClipboard"
Go(*input.SemanticDesc)//bounds!                   "Set *input.SemanticDesc Bounds value"
Go(*input.SemanticDesc)//bounds?                   "Get *input.SemanticDesc Bounds value"
Go(*input.SemanticDesc)//class!                    "Set *input.SemanticDesc Class value"
Go(*input.SemanticDesc)//class?                    "Get *input.SemanticDesc Class value"
Go(*input.SemanticDesc)//description!              "Set *input.SemanticDesc Description value"
Go(*input.SemanticDesc)//description?              "Get *input.SemanticDesc Description value"
Go(*input.SemanticDesc)//disabled!                 "Set *input.SemanticDesc Disabled value"
Go(*input.SemanticDesc)//disabled?                 "Get *input.SemanticDesc Disabled value"
Go(*input.SemanticDesc)//gestures!                 "Set *input.SemanticDesc Gestures value"
Go(*input.SemanticDesc)//gestures?                 "Get *input.SemanticDesc Gestures value"
Go(*input.SemanticDesc)//label!                    "Set *input.SemanticDesc Label value"
Go(*input.SemanticDesc)//label?                    "Get *input.SemanticDesc Label value"
Go(*input.SemanticDesc)//selected!                 "Set *input.SemanticDesc Selected value"
Go(*input.SemanticDesc)//selected?                 "Get *input.SemanticDesc Selected value"
Go(*input.SemanticNode)//children!                 "Set *input.SemanticNode Children value"
Go(*input.SemanticNode)//children?                 "Get *input.SemanticNode Children value"
Go(*input.SemanticNode)//desc!                     "Set *input.SemanticNode Desc value"
Go(*input.SemanticNode)//desc?                     "Get *input.SemanticNode Desc value"
Go(*input.SemanticNode)//id!                       "Set *input.SemanticNode ID value"
Go(*input.SemanticNode)//id?                       "Get *input.SemanticNode ID value"
Go(*input.SemanticNode)//parent-id!                "Set *input.SemanticNode ParentID value"
Go(*input.SemanticNode)//parent-id?                "Get *input.SemanticNode ParentID value"
Go(*input.Source)//enabled                         "input.Source.Enabled"
Go(*input.Source)//event                           "input.Source.Event"
Go(*input.Source)//execute                         "input.Source.Execute"
Go(*input.Source)//focused                         "input.Source.Focused"
Go(*input.SystemEvent)//event!                     "Set *input.SystemEvent Event value"
Go(*input.SystemEvent)//event?                     "Get *input.SystemEvent Event value"
Go(*input.SystemEvent)//implements-event           "input.SystemEvent.ImplementsEvent"
Go(*key.Caret)//ascent!                            "Set *key.Caret Ascent value"
Go(*key.Caret)//ascent?                            "Get *key.Caret Ascent value"
Go(*key.Caret)//descent!                           "Set *key.Caret Descent value"
Go(*key.Caret)//descent?                           "Get *key.Caret Descent value"
Go(*key.Caret)//pos!                               "Set *key.Caret Pos value"
Go(*key.Caret)//pos?                               "Get *key.Caret Pos value"
Go(*key.EditEvent)//implements-event               "key.EditEvent.ImplementsEvent"
Go(*key.EditEvent)//range!                         "Set *key.EditEvent Range value"
Go(*key.EditEvent)//range?                         "Get *key.EditEvent Range value"
Go(*key.EditEvent)//text!                          "Set *key.EditEvent Text value"
Go(*key.EditEvent)//text?                          "Get *key.EditEvent Text value"
Go(*key.Event)//implements-event                   "key.Event.ImplementsEvent"
Go(*key.Event)//modifiers!                         "Set *key.Event Modifiers value"
Go(*key.Event)//modifiers?                         "Get *key.Event Modifiers value"
Go(*key.Event)//name!                              "Set *key.Event Name value"
Go(*key.Event)//name?                              "Get *key.Event Name value"
Go(*key.Event)//state!                             "Set *key.Event State value"
Go(*key.Event)//state?                             "Get *key.Event State value"
Go(*key.Filter)//focus!                            "Set *key.Filter Focus value"
Go(*key.Filter)//focus?                            "Get *key.Filter Focus value"
Go(*key.Filter)//implements-filter                 "key.Filter.ImplementsFilter"
Go(*key.Filter)//name!                             "Set *key.Filter Name value"
Go(*key.Filter)//name?                             "Get *key.Filter Name value"
Go(*key.Filter)//optional!                         "Set *key.Filter Optional value"
Go(*key.Filter)//optional?                         "Get *key.Filter Optional value"
Go(*key.Filter)//required!                         "Set *key.Filter Required value"
Go(*key.Filter)//required?                         "Get *key.Filter Required value"
Go(*key.FocusCmd)//implements-command              "key.FocusCmd.ImplementsCommand"
Go(*key.FocusCmd)//tag!                            "Set *key.FocusCmd Tag value"
Go(*key.FocusCmd)//tag?                            "Get *key.FocusCmd Tag value"
Go(*key.FocusEvent)//focus!                        "Set *key.FocusEvent Focus value"
Go(*key.FocusEvent)//focus?                        "Get *key.FocusEvent Focus value"
Go(*key.FocusEvent)//implements-event              "key.FocusEvent.ImplementsEvent"
Go(*key.FocusFilter)//implements-filter            "key.FocusFilter.ImplementsFilter"
Go(*key.FocusFilter)//target!                      "Set *key.FocusFilter Target value"
Go(*key.FocusFilter)//target?                      "Get *key.FocusFilter Target value"
Go(*key.InputHintOp)//add                          "key.InputHintOp.Add"
Go(*key.InputHintOp)//hint!                        "Set *key.InputHintOp Hint value"
Go(*key.InputHintOp)//hint?                        "Get *key.InputHintOp Hint value"
Go(*key.InputHintOp)//tag!                         "Set *key.InputHintOp Tag value"
Go(*key.InputHintOp)//tag?                         "Get *key.InputHintOp Tag value"
Go(*key.Range)//end!                               "Set *key.Range End value"
Go(*key.Range)//end?                               "Get *key.Range End value"
Go(*key.Range)//start!                             "Set *key.Range Start value"
Go(*key.Range)//start?                             "Get *key.Range Start value"
Go(*key.SelectionCmd)//ascent!                     "Set *key.SelectionCmd Ascent value"
Go(*key.SelectionCmd)//ascent?                     "Get *key.SelectionCmd Ascent value"
Go(*key.SelectionCmd)//caret!                      "Set *key.SelectionCmd Caret value"
Go(*key.SelectionCmd)//caret?                      "Get *key.SelectionCmd Caret value"
Go(*key.SelectionCmd)//descent!                    "Set *key.SelectionCmd Descent value"
Go(*key.SelectionCmd)//descent?                    "Get *key.SelectionCmd Descent value"
Go(*key.SelectionCmd)//end!                        "Set *key.SelectionCmd End value"
Go(*key.SelectionCmd)//end?                        "Get *key.SelectionCmd End value"
Go(*key.SelectionCmd)//implements-command          "key.SelectionCmd.ImplementsCommand"
Go(*key.SelectionCmd)//pos!                        "Set *key.SelectionCmd Pos value"
Go(*key.SelectionCmd)//pos?                        "Get *key.SelectionCmd Pos value"
Go(*key.SelectionCmd)//range!                      "Set *key.SelectionCmd Range value"
Go(*key.SelectionCmd)//range?                      "Get *key.SelectionCmd Range value"
Go(*key.SelectionCmd)//start!                      "Set *key.SelectionCmd Start value"
Go(*key.SelectionCmd)//start?                      "Get *key.SelectionCmd Start value"
Go(*key.SelectionCmd)//tag!                        "Set *key.SelectionCmd Tag value"
Go(*key.SelectionCmd)//tag?                        "Get *key.SelectionCmd Tag value"
Go(*key.Snippet)//end!                             "Set *key.Snippet End value"
Go(*key.Snippet)//end?                             "Get *key.Snippet End value"
Go(*key.Snippet)//range!                           "Set *key.Snippet Range value"
Go(*key.Snippet)//range?                           "Get *key.Snippet Range value"
Go(*key.Snippet)//start!                           "Set *key.Snippet Start value"
Go(*key.Snippet)//start?                           "Get *key.Snippet Start value"
Go(*key.Snippet)//text!                            "Set *key.Snippet Text value"
Go(*key.Snippet)//text?                            "Get *key.Snippet Text value"
Go(*key.SnippetCmd)//end!                          "Set *key.SnippetCmd End value"
Go(*key.SnippetCmd)//end?                          "Get *key.SnippetCmd End value"
Go(*key.SnippetCmd)//implements-command            "key.SnippetCmd.ImplementsCommand"
Go(*key.SnippetCmd)//range!                        "Set *key.SnippetCmd Range value"
Go(*key.SnippetCmd)//range?                        "Get *key.SnippetCmd Range value"
Go(*key.SnippetCmd)//snippet!                      "Set *key.SnippetCmd Snippet value"
Go(*key.SnippetCmd)//snippet?                      "Get *key.SnippetCmd Snippet value"
Go(*key.SnippetCmd)//start!                        "Set *key.SnippetCmd Start value"
Go(*key.SnippetCmd)//start?                        "Get *key.SnippetCmd Start value"
Go(*key.SnippetCmd)//tag!                          "Set *key.SnippetCmd Tag value"
Go(*key.SnippetCmd)//tag?                          "Get *key.SnippetCmd Tag value"
Go(*key.SnippetCmd)//text!                         "Set *key.SnippetCmd Text value"
Go(*key.SnippetCmd)//text?                         "Get *key.SnippetCmd Text value"
Go(*key.SoftKeyboardCmd)//implements-command       "key.SoftKeyboardCmd.ImplementsCommand"
Go(*key.SoftKeyboardCmd)//show!                    "Set *key.SoftKeyboardCmd Show value"
Go(*key.SoftKeyboardCmd)//show?                    "Get *key.SoftKeyboardCmd Show value"
Go(*layout.Background)//layout                     "layout.Background.Layout"
Go(*layout.Constraints)//add-min                   "layout.Constraints.AddMin"
Go(*layout.Constraints)//constrain                 "layout.Constraints.Constrain"
Go(*layout.Constraints)//max!                      "Set *layout.Constraints Max value"
Go(*layout.Constraints)//max?                      "Get *layout.Constraints Max value"
Go(*layout.Constraints)//min!                      "Set *layout.Constraints Min value"
Go(*layout.Constraints)//min?                      "Get *layout.Constraints Min value"
Go(*layout.Constraints)//sub-max                   "layout.Constraints.SubMax"
Go(*layout.Context)//constraints!                  "Set *layout.Context Constraints value"
Go(*layout.Context)//constraints?                  "Get *layout.Context Constraints value"
Go(*layout.Context)//disabled                      "layout.Context.Disabled"
Go(*layout.Context)//dp                            "layout.Context.Dp"
Go(*layout.Context)//enabled                       "layout.Context.Enabled"
Go(*layout.Context)//event                         "layout.Context.Event"
Go(*layout.Context)//execute                       "layout.Context.Execute"
Go(*layout.Context)//focused                       "layout.Context.Focused"
Go(*layout.Context)//locale!                       "Set *layout.Context Locale value"
Go(*layout.Context)//locale?                       "Get *layout.Context Locale value"
Go(*layout.Context)//metric!                       "Set *layout.Context Metric value"
Go(*layout.Context)//metric?                       "Get *layout.Context Metric value"
Go(*layout.Context)//now!                          "Set *layout.Context Now value"
Go(*layout.Context)//now?                          "Get *layout.Context Now value"
Go(*layout.Context)//ops!                          "Set *layout.Context Ops value"
Go(*layout.Context)//ops?                          "Get *layout.Context Ops value"
Go(*layout.Context)//reset                         "(*layout.Context).Reset"
Go(*layout.Context)//source!                       "Set *layout.Context Source value"
Go(*layout.Context)//source?                       "Get *layout.Context Source value"
Go(*layout.Context)//sp                            "layout.Context.Sp"
Go(*layout.Dimensions)//baseline!                  "Set *layout.Dimensions Baseline value"
Go(*layout.Dimensions)//baseline?                  "Get *layout.Dimensions Baseline value"
Go(*layout.Dimensions)//size!                      "Set *layout.Dimensions Size value"
Go(*layout.Dimensions)//size?                      "Get *layout.Dimensions Size value"
Go(*layout.Flex)//alignment!                       "Set *layout.Flex Alignment value"
Go(*layout.Flex)//alignment?                       "Get *layout.Flex Alignment value"
Go(*layout.Flex)//axis!                            "Set *layout.Flex Axis value"
Go(*layout.Flex)//axis?                            "Get *layout.Flex Axis value"
Go(*layout.Flex)//layout                           "layout.Flex.Layout"
Go(*layout.Flex)//spacing!                         "Set *layout.Flex Spacing value"
Go(*layout.Flex)//spacing?                         "Get *layout.Flex Spacing value"
Go(*layout.Flex)//weight-sum!                      "Set *layout.Flex WeightSum value"
Go(*layout.Flex)//weight-sum?                      "Get *layout.Flex WeightSum value"
Go(*layout.Inset)//bottom!                         "Set *layout.Inset Bottom value"
Go(*layout.Inset)//bottom?                         "Get *layout.Inset Bottom value"
Go(*layout.Inset)//layout                          "layout.Inset.Layout"
Go(*layout.Inset)//left!                           "Set *layout.Inset Left value"
Go(*layout.Inset)//left?                           "Get *layout.Inset Left value"
Go(*layout.Inset)//right!                          "Set *layout.Inset Right value"
Go(*layout.Inset)//right?                          "Get *layout.Inset Right value"
Go(*layout.Inset)//top!                            "Set *layout.Inset Top value"
Go(*layout.Inset)//top?                            "Get *layout.Inset Top value"
Go(*layout.List)//alignment!                       "Set *layout.List Alignment value"
Go(*layout.List)//alignment?                       "Get *layout.List Alignment value"
Go(*layout.List)//axis!                            "Set *layout.List Axis value"
Go(*layout.List)//axis?                            "Get *layout.List Axis value"
Go(*layout.List)//dragging                         "(*layout.List).Dragging"
Go(*layout.List)//layout                           "(*layout.List).Layout"
Go(*layout.List)//position!                        "Set *layout.List Position value"
Go(*layout.List)//position?                        "Get *layout.List Position value"
Go(*layout.List)//scroll-by                        "(*layout.List).ScrollBy"
Go(*layout.List)//scroll-to                        "(*layout.List).ScrollTo"
Go(*layout.List)//scroll-to-end!                   "Set *layout.List ScrollToEnd value"
Go(*layout.List)//scroll-to-end?                   "Get *layout.List ScrollToEnd value"
Go(*layout.Position)//before-end!                  "Set *layout.Position BeforeEnd value"
Go(*layout.Position)//before-end?                  "Get *layout.Position BeforeEnd value"
Go(*layout.Position)//count!                       "Set *layout.Position Count value"
Go(*layout.Position)//count?                       "Get *layout.Position Count value"
Go(*layout.Position)//first!                       "Set *layout.Position First value"
Go(*layout.Position)//first?                       "Get *layout.Position First value"
Go(*layout.Position)//length!                      "Set *layout.Position Length value"
Go(*layout.Position)//length?                      "Get *layout.Position Length value"
Go(*layout.Position)//offset!                      "Set *layout.Position Offset value"
Go(*layout.Position)//offset-last!                 "Set *layout.Position OffsetLast value"
Go(*layout.Position)//offset-last?                 "Get *layout.Position OffsetLast value"
Go(*layout.Position)//offset?                      "Get *layout.Position Offset value"
Go(*layout.Spacer)//height!                        "Set *layout.Spacer Height value"
Go(*layout.Spacer)//height?                        "Get *layout.Spacer Height value"
Go(*layout.Spacer)//layout                         "layout.Spacer.Layout"
Go(*layout.Spacer)//width!                         "Set *layout.Spacer Width value"
Go(*layout.Spacer)//width?                         "Get *layout.Spacer Width value"
Go(*layout.Stack)//alignment!                      "Set *layout.Stack Alignment value"
Go(*layout.Stack)//alignment?                      "Get *layout.Stack Alignment value"
Go(*layout.Stack)//layout                          "layout.Stack.Layout"
Go(*material.ButtonLayoutStyle)//background!       "Set *material.ButtonLayoutStyle Background value"
Go(*material.ButtonLayoutStyle)//background?       "Get *material.ButtonLayoutStyle Background value"
Go(*material.ButtonLayoutStyle)//button!           "Set *material.ButtonLayoutStyle Button value"
Go(*material.ButtonLayoutStyle)//button?           "Get *material.ButtonLayoutStyle Button value"
Go(*material.ButtonLayoutStyle)//corner-radius!    "Set *material.ButtonLayoutStyle CornerRadius value"
Go(*material.ButtonLayoutStyle)//corner-radius?    "Get *material.ButtonLayoutStyle CornerRadius value"
Go(*material.ButtonLayoutStyle)//layout            "material.ButtonLayoutStyle.Layout"
Go(*material.ButtonStyle)//background!             "Set *material.ButtonStyle Background value"
Go(*material.ButtonStyle)//background?             "Get *material.ButtonStyle Background value"
Go(*material.ButtonStyle)//button!                 "Set *material.ButtonStyle Button value"
Go(*material.ButtonStyle)//button?                 "Get *material.ButtonStyle Button value"
Go(*material.ButtonStyle)//color!                  "Set *material.ButtonStyle Color value"
Go(*material.ButtonStyle)//color?                  "Get *material.ButtonStyle Color value"
Go(*material.ButtonStyle)//corner-radius!          "Set *material.ButtonStyle CornerRadius value"
Go(*material.ButtonStyle)//corner-radius?          "Get *material.ButtonStyle CornerRadius value"
Go(*material.ButtonStyle)//font!                   "Set *material.ButtonStyle Font value"
Go(*material.ButtonStyle)//font?                   "Get *material.ButtonStyle Font value"
Go(*material.ButtonStyle)//inset!                  "Set *material.ButtonStyle Inset value"
Go(*material.ButtonStyle)//inset?                  "Get *material.ButtonStyle Inset value"
Go(*material.ButtonStyle)//layout                  "material.ButtonStyle.Layout"
Go(*material.ButtonStyle)//text!                   "Set *material.ButtonStyle Text value"
Go(*material.ButtonStyle)//text-size!              "Set *material.ButtonStyle TextSize value"
Go(*material.ButtonStyle)//text-size?              "Get *material.ButtonStyle TextSize value"
Go(*material.ButtonStyle)//text?                   "Get *material.ButtonStyle Text value"
Go(*material.CheckBoxStyle)//check-box!            "Set *material.CheckBoxStyle CheckBox value"
Go(*material.CheckBoxStyle)//check-box?            "Get *material.CheckBoxStyle CheckBox value"
Go(*material.CheckBoxStyle)//layout                "material.CheckBoxStyle.Layout"
Go(*material.DecorationsStyle)//actions!           "Set *material.DecorationsStyle Actions value"
Go(*material.DecorationsStyle)//actions?           "Get *material.DecorationsStyle Actions value"
Go(*material.DecorationsStyle)//background!        "Set *material.DecorationsStyle Background value"
Go(*material.DecorationsStyle)//background?        "Get *material.DecorationsStyle Background value"
Go(*material.DecorationsStyle)//decorations!       "Set *material.DecorationsStyle Decorations value"
Go(*material.DecorationsStyle)//decorations?       "Get *material.DecorationsStyle Decorations value"
Go(*material.DecorationsStyle)//foreground!        "Set *material.DecorationsStyle Foreground value"
Go(*material.DecorationsStyle)//foreground?        "Get *material.DecorationsStyle Foreground value"
Go(*material.DecorationsStyle)//layout             "material.DecorationsStyle.Layout"
Go(*material.DecorationsStyle)//title!             "Set *material.DecorationsStyle Title value"
Go(*material.DecorationsStyle)//title?             "Get *material.DecorationsStyle Title value"
Go(*material.EditorStyle)//color!                  "Set *material.EditorStyle Color value"
Go(*material.EditorStyle)//color?                  "Get *material.EditorStyle Color value"
Go(*material.EditorStyle)//editor!                 "Set *material.EditorStyle Editor value"
Go(*material.EditorStyle)//editor?                 "Get *material.EditorStyle Editor value"
Go(*material.EditorStyle)//font!                   "Set *material.EditorStyle Font value"
Go(*material.EditorStyle)//font?                   "Get *material.EditorStyle Font value"
Go(*material.EditorStyle)//hint!                   "Set *material.EditorStyle Hint value"
Go(*material.EditorStyle)//hint-color!             "Set *material.EditorStyle HintColor value"
Go(*material.EditorStyle)//hint-color?             "Get *material.EditorStyle HintColor value"
Go(*material.EditorStyle)//hint?                   "Get *material.EditorStyle Hint value"
Go(*material.EditorStyle)//layout                  "material.EditorStyle.Layout"
Go(*material.EditorStyle)//line-height!            "Set *material.EditorStyle LineHeight value"
Go(*material.EditorStyle)//line-height-scale!      "Set *material.EditorStyle LineHeightScale value"
Go(*material.EditorStyle)//line-height-scale?      "Get *material.EditorStyle LineHeightScale value"
Go(*material.EditorStyle)//line-height?            "Get *material.EditorStyle LineHeight value"
Go(*material.EditorStyle)//selection-color!        "Set *material.EditorStyle SelectionColor value"
Go(*material.EditorStyle)//selection-color?        "Get *material.EditorStyle SelectionColor value"
Go(*material.EditorStyle)//text-size!              "Set *material.EditorStyle TextSize value"
Go(*material.EditorStyle)//text-size?              "Get *material.EditorStyle TextSize value"
Go(*material.IconButtonStyle)//background!         "Set *material.IconButtonStyle Background value"
Go(*material.IconButtonStyle)//background?         "Get *material.IconButtonStyle Background value"
Go(*material.IconButtonStyle)//button!             "Set *material.IconButtonStyle Button value"
Go(*material.IconButtonStyle)//button?             "Get *material.IconButtonStyle Button value"
Go(*material.IconButtonStyle)//color!              "Set *material.IconButtonStyle Color value"
Go(*material.IconButtonStyle)//color?              "Get *material.IconButtonStyle Color value"
Go(*material.IconButtonStyle)//description!        "Set *material.IconButtonStyle Description value"
Go(*material.IconButtonStyle)//description?        "Get *material.IconButtonStyle Description value"
Go(*material.IconButtonStyle)//icon!               "Set *material.IconButtonStyle Icon value"
Go(*material.IconButtonStyle)//icon?               "Get *material.IconButtonStyle Icon value"
Go(*material.IconButtonStyle)//inset!              "Set *material.IconButtonStyle Inset value"
Go(*material.IconButtonStyle)//inset?              "Get *material.IconButtonStyle Inset value"
Go(*material.IconButtonStyle)//layout              "material.IconButtonStyle.Layout"
Go(*material.IconButtonStyle)//size!               "Set *material.IconButtonStyle Size value"
Go(*material.IconButtonStyle)//size?               "Get *material.IconButtonStyle Size value"
Go(*material.LabelStyle)//alignment!               "Set *material.LabelStyle Alignment value"
Go(*material.LabelStyle)//alignment?               "Get *material.LabelStyle Alignment value"
Go(*material.LabelStyle)//color!                   "Set *material.LabelStyle Color value"
Go(*material.LabelStyle)//color?                   "Get *material.LabelStyle Color value"
Go(*material.LabelStyle)//font!                    "Set *material.LabelStyle Font value"
Go(*material.LabelStyle)//font?                    "Get *material.LabelStyle Font value"
Go(*material.LabelStyle)//layout                   "material.LabelStyle.Layout"
Go(*material.LabelStyle)//line-height!             "Set *material.LabelStyle LineHeight value"
Go(*material.LabelStyle)//line-height-scale!       "Set *material.LabelStyle LineHeightScale value"
Go(*material.LabelStyle)//line-height-scale?       "Get *material.LabelStyle LineHeightScale value"
Go(*material.LabelStyle)//line-height?             "Get *material.LabelStyle LineHeight value"
Go(*material.LabelStyle)//max-lines!               "Set *material.LabelStyle MaxLines value"
Go(*material.LabelStyle)//max-lines?               "Get *material.LabelStyle MaxLines value"
Go(*material.LabelStyle)//selection-color!         "Set *material.LabelStyle SelectionColor value"
Go(*material.LabelStyle)//selection-color?         "Get *material.LabelStyle SelectionColor value"
Go(*material.LabelStyle)//shaper!                  "Set *material.LabelStyle Shaper value"
Go(*material.LabelStyle)//shaper?                  "Get *material.LabelStyle Shaper value"
Go(*material.LabelStyle)//state!                   "Set *material.LabelStyle State value"
Go(*material.LabelStyle)//state?                   "Get *material.LabelStyle State value"
Go(*material.LabelStyle)//text!                    "Set *material.LabelStyle Text value"
Go(*material.LabelStyle)//text-size!               "Set *material.LabelStyle TextSize value"
Go(*material.LabelStyle)//text-size?               "Get *material.LabelStyle TextSize value"
Go(*material.LabelStyle)//text?                    "Get *material.LabelStyle Text value"
Go(*material.LabelStyle)//truncator!               "Set *material.LabelStyle Truncator value"
Go(*material.LabelStyle)//truncator?               "Get *material.LabelStyle Truncator value"
Go(*material.LabelStyle)//wrap-policy!             "Set *material.LabelStyle WrapPolicy value"
Go(*material.LabelStyle)//wrap-policy?             "Get *material.LabelStyle WrapPolicy value"
Go(*material.ListStyle)//anchor-strategy!          "Set *material.ListStyle AnchorStrategy value"
Go(*material.ListStyle)//anchor-strategy?          "Get *material.ListStyle AnchorStrategy value"
Go(*material.ListStyle)//indicator!                "Set *material.ListStyle Indicator value"
Go(*material.ListStyle)//indicator?                "Get *material.ListStyle Indicator value"
Go(*material.ListStyle)//layout                    "material.ListStyle.Layout"
Go(*material.ListStyle)//scrollbar!                "Set *material.ListStyle Scrollbar value"
Go(*material.ListStyle)//scrollbar-style!          "Set *material.ListStyle ScrollbarStyle value"
Go(*material.ListStyle)//scrollbar-style?          "Get *material.ListStyle ScrollbarStyle value"
Go(*material.ListStyle)//scrollbar?                "Get *material.ListStyle Scrollbar value"
Go(*material.ListStyle)//track!                    "Set *material.ListStyle Track value"
Go(*material.ListStyle)//track?                    "Get *material.ListStyle Track value"
Go(*material.ListStyle)//width                     "material.ListStyle.Width"
Go(*material.LoaderStyle)//color!                  "Set *material.LoaderStyle Color value"
Go(*material.LoaderStyle)//color?                  "Get *material.LoaderStyle Color value"
Go(*material.LoaderStyle)//layout                  "material.LoaderStyle.Layout"
Go(*material.Palette)//bg!                         "Set *material.Palette Bg value"
Go(*material.Palette)//bg?                         "Get *material.Palette Bg value"
Go(*material.Palette)//contrast-bg!                "Set *material.Palette ContrastBg value"
Go(*material.Palette)//contrast-bg?                "Get *material.Palette ContrastBg value"
Go(*material.Palette)//contrast-fg!                "Set *material.Palette ContrastFg value"
Go(*material.Palette)//contrast-fg?                "Get *material.Palette ContrastFg value"
Go(*material.Palette)//fg!                         "Set *material.Palette Fg value"
Go(*material.Palette)//fg?                         "Get *material.Palette Fg value"
Go(*material.ProgressBarStyle)//color!             "Set *material.ProgressBarStyle Color value"
Go(*material.ProgressBarStyle)//color?             "Get *material.ProgressBarStyle Color value"
Go(*material.ProgressBarStyle)//height!            "Set *material.ProgressBarStyle Height value"
Go(*material.ProgressBarStyle)//height?            "Get *material.ProgressBarStyle Height value"
Go(*material.ProgressBarStyle)//layout             "material.ProgressBarStyle.Layout"
Go(*material.ProgressBarStyle)//progress!          "Set *material.ProgressBarStyle Progress value"
Go(*material.ProgressBarStyle)//progress?          "Get *material.ProgressBarStyle Progress value"
Go(*material.ProgressBarStyle)//radius!            "Set *material.ProgressBarStyle Radius value"
Go(*material.ProgressBarStyle)//radius?            "Get *material.ProgressBarStyle Radius value"
Go(*material.ProgressBarStyle)//track-color!       "Set *material.ProgressBarStyle TrackColor value"
Go(*material.ProgressBarStyle)//track-color?       "Get *material.ProgressBarStyle TrackColor value"
Go(*material.ProgressCircleStyle)//color!          "Set *material.ProgressCircleStyle Color value"
Go(*material.ProgressCircleStyle)//color?          "Get *material.ProgressCircleStyle Color value"
Go(*material.ProgressCircleStyle)//layout          "material.ProgressCircleStyle.Layout"
Go(*material.ProgressCircleStyle)//progress!       "Set *material.ProgressCircleStyle Progress value"
Go(*material.ProgressCircleStyle)//progress?       "Get *material.ProgressCircleStyle Progress value"
Go(*material.RadioButtonStyle)//group!             "Set *material.RadioButtonStyle Group value"
Go(*material.RadioButtonStyle)//group?             "Get *material.RadioButtonStyle Group value"
Go(*material.RadioButtonStyle)//key!               "Set *material.RadioButtonStyle Key value"
Go(*material.RadioButtonStyle)//key?               "Get *material.RadioButtonStyle Key value"
Go(*material.RadioButtonStyle)//layout             "material.RadioButtonStyle.Layout"
Go(*material.ScrollIndicatorStyle)//color!         "Set *material.ScrollIndicatorStyle Color value"
Go(*material.ScrollIndicatorStyle)//color?         "Get *material.ScrollIndicatorStyle Color value"
Go(*material.ScrollIndicatorStyle)//corner-radius! "Set *material.ScrollIndicatorStyle CornerRadius value"
Go(*material.ScrollIndicatorStyle)//corner-radius? "Get *material.ScrollIndicatorStyle CornerRadius value"
Go(*material.ScrollIndicatorStyle)//hover-color!   "Set *material.ScrollIndicatorStyle HoverColor value"
Go(*material.ScrollIndicatorStyle)//hover-color?   "Get *material.ScrollIndicatorStyle HoverColor value"
Go(*material.ScrollIndicatorStyle)//major-min-len! "Set *material.ScrollIndicatorStyle MajorMinLen value"
Go(*material.ScrollIndicatorStyle)//major-min-len? "Get *material.ScrollIndicatorStyle MajorMinLen value"
Go(*material.ScrollIndicatorStyle)//minor-width!   "Set *material.ScrollIndicatorStyle MinorWidth value"
Go(*material.ScrollIndicatorStyle)//minor-width?   "Get *material.ScrollIndicatorStyle MinorWidth value"
Go(*material.ScrollTrackStyle)//color!             "Set *material.ScrollTrackStyle Color value"
Go(*material.ScrollTrackStyle)//color?             "Get *material.ScrollTrackStyle Color value"
Go(*material.ScrollTrackStyle)//major-padding!     "Set *material.ScrollTrackStyle MajorPadding value"
Go(*material.ScrollTrackStyle)//major-padding?     "Get *material.ScrollTrackStyle MajorPadding value"
Go(*material.ScrollTrackStyle)//minor-padding!     "Set *material.ScrollTrackStyle MinorPadding value"
Go(*material.ScrollTrackStyle)//minor-padding?     "Get *material.ScrollTrackStyle MinorPadding value"
Go(*material.ScrollbarStyle)//indicator!           "Set *material.ScrollbarStyle Indicator value"
Go(*material.ScrollbarStyle)//indicator?           "Get *material.ScrollbarStyle Indicator value"
Go(*material.ScrollbarStyle)//layout               "material.ScrollbarStyle.Layout"
Go(*material.ScrollbarStyle)//scrollbar!           "Set *material.ScrollbarStyle Scrollbar value"
Go(*material.ScrollbarStyle)//scrollbar?           "Get *material.ScrollbarStyle Scrollbar value"
Go(*material.ScrollbarStyle)//track!               "Set *material.ScrollbarStyle Track value"
Go(*material.ScrollbarStyle)//track?               "Get *material.ScrollbarStyle Track value"
Go(*material.ScrollbarStyle)//width                "material.ScrollbarStyle.Width"
Go(*material.SliderStyle)//axis!                   "Set *material.SliderStyle Axis value"
Go(*material.SliderStyle)//axis?                   "Get *material.SliderStyle Axis value"
Go(*material.SliderStyle)//color!                  "Set *material.SliderStyle Color value"
Go(*material.SliderStyle)//color?                  "Get *material.SliderStyle Color value"
Go(*material.SliderStyle)//finger-size!            "Set *material.SliderStyle FingerSize value"
Go(*material.SliderStyle)//finger-size?            "Get *material.SliderStyle FingerSize value"
Go(*material.SliderStyle)//float!                  "Set *material.SliderStyle Float value"
Go(*material.SliderStyle)//float?                  "Get *material.SliderStyle Float value"
Go(*material.SliderStyle)//layout                  "material.SliderStyle.Layout"
Go(*material.SwitchStyle)//color!                  "Set *material.SwitchStyle Color value"
Go(*material.SwitchStyle)//color?                  "Get *material.SwitchStyle Color value"
Go(*material.SwitchStyle)//description!            "Set *material.SwitchStyle Description value"
Go(*material.SwitchStyle)//description?            "Get *material.SwitchStyle Description value"
Go(*material.SwitchStyle)//layout                  "material.SwitchStyle.Layout"
Go(*material.SwitchStyle)//switch!                 "Set *material.SwitchStyle Switch value"
Go(*material.SwitchStyle)//switch?                 "Get *material.SwitchStyle Switch value"
Go(*material.Theme)//bg!                           "Set *material.Theme Bg value"
Go(*material.Theme)//bg?                           "Get *material.Theme Bg value"
Go(*material.Theme)//contrast-bg!                  "Set *material.Theme ContrastBg value"
Go(*material.Theme)//contrast-bg?                  "Get *material.Theme ContrastBg value"
Go(*material.Theme)//contrast-fg!                  "Set *material.Theme ContrastFg value"
Go(*material.Theme)//contrast-fg?                  "Get *material.Theme ContrastFg value"
Go(*material.Theme)//face!                         "Set *material.Theme Face value"
Go(*material.Theme)//face?                         "Get *material.Theme Face value"
Go(*material.Theme)//fg!                           "Set *material.Theme Fg value"
Go(*material.Theme)//fg?                           "Get *material.Theme Fg value"
Go(*material.Theme)//finger-size!                  "Set *material.Theme FingerSize value"
Go(*material.Theme)//finger-size?                  "Get *material.Theme FingerSize value"
Go(*material.Theme)//icon!                         "Set *material.Theme Icon value"
Go(*material.Theme)//icon?                         "Get *material.Theme Icon value"
Go(*material.Theme)//palette!                      "Set *material.Theme Palette value"
Go(*material.Theme)//palette?                      "Get *material.Theme Palette value"
Go(*material.Theme)//shaper!                       "Set *material.Theme Shaper value"
Go(*material.Theme)//shaper?                       "Get *material.Theme Shaper value"
Go(*material.Theme)//text-size!                    "Set *material.Theme TextSize value"
Go(*material.Theme)//text-size?                    "Get *material.Theme TextSize value"
Go(*material.Theme)//with-palette                  "material.Theme.WithPalette"
Go(*op.CallOp)//add                                "op.CallOp.Add"
Go(*op.InvalidateCmd)//at!                         "Set *op.InvalidateCmd At value"
Go(*op.InvalidateCmd)//at?                         "Get *op.InvalidateCmd At value"
Go(*op.InvalidateCmd)//implements-command          "op.InvalidateCmd.ImplementsCommand"
Go(*op.MacroOp)//stop                              "op.MacroOp.Stop"
Go(*op.Ops)//reset                                 "(*op.Ops).Reset"
Go(*op.TransformOp)//add                           "op.TransformOp.Add"
Go(*op.TransformOp)//push                          "op.TransformOp.Push"
Go(*op.TransformStack)//pop                        "op.TransformStack.Pop"
Go(*opentype.Face)//face                           "opentype.Face.Face"
Go(*opentype.Face)//font                           "opentype.Face.Font"
Go(*paint.ColorOp)//add                            "paint.ColorOp.Add"
Go(*paint.ColorOp)//color!                         "Set *paint.ColorOp Color value"
Go(*paint.ColorOp)//color?                         "Get *paint.ColorOp Color value"
Go(*paint.ImageOp)//add                            "paint.ImageOp.Add"
Go(*paint.ImageOp)//filter!                        "Set *paint.ImageOp Filter value"
Go(*paint.ImageOp)//filter?                        "Get *paint.ImageOp Filter value"
Go(*paint.ImageOp)//size                           "paint.ImageOp.Size"
Go(*paint.LinearGradientOp)//add                   "paint.LinearGradientOp.Add"
Go(*paint.LinearGradientOp)//color-1!              "Set *paint.LinearGradientOp Color1 value"
Go(*paint.LinearGradientOp)//color-1?              "Get *paint.LinearGradientOp Color1 value"
Go(*paint.LinearGradientOp)//color-2!              "Set *paint.LinearGradientOp Color2 value"
Go(*paint.LinearGradientOp)//color-2?              "Get *paint.LinearGradientOp Color2 value"
Go(*paint.LinearGradientOp)//stop-1!               "Set *paint.LinearGradientOp Stop1 value"
Go(*paint.LinearGradientOp)//stop-1?               "Get *paint.LinearGradientOp Stop1 value"
Go(*paint.LinearGradientOp)//stop-2!               "Set *paint.LinearGradientOp Stop2 value"
Go(*paint.LinearGradientOp)//stop-2?               "Get *paint.LinearGradientOp Stop2 value"
Go(*paint.OpacityStack)//pop                       "paint.OpacityStack.Pop"
Go(*paint.PaintOp)//add                            "paint.PaintOp.Add"
Go(*pointer.Event)//buttons!                       "Set *pointer.Event Buttons value"
Go(*pointer.Event)//buttons?                       "Get *pointer.Event Buttons value"
Go(*pointer.Event)//implements-event               "pointer.Event.ImplementsEvent"
Go(*pointer.Event)//kind!                          "Set *pointer.Event Kind value"
Go(*pointer.Event)//kind?                          "Get *pointer.Event Kind value"
Go(*pointer.Event)//modifiers!                     "Set *pointer.Event Modifiers value"
Go(*pointer.Event)//modifiers?                     "Get *pointer.Event Modifiers value"
Go(*pointer.Event)//pointer-id!                    "Set *pointer.Event PointerID value"
Go(*pointer.Event)//pointer-id?                    "Get *pointer.Event PointerID value"
Go(*pointer.Event)//position!                      "Set *pointer.Event Position value"
Go(*pointer.Event)//position?                      "Get *pointer.Event Position value"
Go(*pointer.Event)//priority!                      "Set *pointer.Event Priority value"
Go(*pointer.Event)//priority?                      "Get *pointer.Event Priority value"
Go(*pointer.Event)//scroll!                        "Set *pointer.Event Scroll value"
Go(*pointer.Event)//scroll?                        "Get *pointer.Event Scroll value"
Go(*pointer.Event)//source!                        "Set *pointer.Event Source value"
Go(*pointer.Event)//source?                        "Get *pointer.Event Source value"
Go(*pointer.Event)//time!                          "Set *pointer.Event Time value"
Go(*pointer.Event)//time?                          "Get *pointer.Event Time value"
Go(*pointer.Filter)//implements-filter             "pointer.Filter.ImplementsFilter"
Go(*pointer.Filter)//kinds!                        "Set *pointer.Filter Kinds value"
Go(*pointer.Filter)//kinds?                        "Get *pointer.Filter Kinds value"
Go(*pointer.Filter)//scroll-x!                     "Set *pointer.Filter ScrollX value"
Go(*pointer.Filter)//scroll-x?                     "Get *pointer.Filter ScrollX value"
Go(*pointer.Filter)//scroll-y!                     "Set *pointer.Filter ScrollY value"
Go(*pointer.Filter)//scroll-y?                     "Get *pointer.Filter ScrollY value"
Go(*pointer.Filter)//target!                       "Set *pointer.Filter Target value"
Go(*pointer.Filter)//target?                       "Get *pointer.Filter Target value"
Go(*pointer.GrabCmd)//id!                          "Set *pointer.GrabCmd ID value"
Go(*pointer.GrabCmd)//id?                          "Get *pointer.GrabCmd ID value"
Go(*pointer.GrabCmd)//implements-command           "pointer.GrabCmd.ImplementsCommand"
Go(*pointer.GrabCmd)//tag!                         "Set *pointer.GrabCmd Tag value"
Go(*pointer.GrabCmd)//tag?                         "Get *pointer.GrabCmd Tag value"
Go(*pointer.PassOp)//push                          "pointer.PassOp.Push"
Go(*pointer.PassStack)//pop                        "pointer.PassStack.Pop"
Go(*pointer.ScrollRange)//max!                     "Set *pointer.ScrollRange Max value"
Go(*pointer.ScrollRange)//max?                     "Get *pointer.ScrollRange Max value"
Go(*pointer.ScrollRange)//min!                     "Set *pointer.ScrollRange Min value"
Go(*pointer.ScrollRange)//min?                     "Get *pointer.ScrollRange Min value"
Go(*pointer.ScrollRange)//union                    "pointer.ScrollRange.Union"
Go(*system.Locale)//direction!                     "Set *system.Locale Direction value"
Go(*system.Locale)//direction?                     "Get *system.Locale Direction value"
Go(*system.Locale)//language!                      "Set *system.Locale Language value"
Go(*system.Locale)//language?                      "Get *system.Locale Language value"
Go(*text.Glyph)//advance!                          "Set *text.Glyph Advance value"
Go(*text.Glyph)//advance?                          "Get *text.Glyph Advance value"
Go(*text.Glyph)//ascent!                           "Set *text.Glyph Ascent value"
Go(*text.Glyph)//ascent?                           "Get *text.Glyph Ascent value"
Go(*text.Glyph)//bounds!                           "Set *text.Glyph Bounds value"
Go(*text.Glyph)//bounds?                           "Get *text.Glyph Bounds value"
Go(*text.Glyph)//descent!                          "Set *text.Glyph Descent value"
Go(*text.Glyph)//descent?                          "Get *text.Glyph Descent value"
Go(*text.Glyph)//flags!                            "Set *text.Glyph Flags value"
Go(*text.Glyph)//flags?                            "Get *text.Glyph Flags value"
Go(*text.Glyph)//id!                               "Set *text.Glyph ID value"
Go(*text.Glyph)//id?                               "Get *text.Glyph ID value"
Go(*text.Glyph)//offset!                           "Set *text.Glyph Offset value"
Go(*text.Glyph)//offset?                           "Get *text.Glyph Offset value"
Go(*text.Glyph)//runes!                            "Set *text.Glyph Runes value"
Go(*text.Glyph)//runes?                            "Get *text.Glyph Runes value"
Go(*text.Glyph)//x!                                "Set *text.Glyph X value"
Go(*text.Glyph)//x?                                "Get *text.Glyph X value"
Go(*text.Glyph)//y!                                "Set *text.Glyph Y value"
Go(*text.Glyph)//y?                                "Get *text.Glyph Y value"
Go(*text.Parameters)//alignment!                   "Set *text.Parameters Alignment value"
Go(*text.Parameters)//alignment?                   "Get *text.Parameters Alignment value"
Go(*text.Parameters)//font!                        "Set *text.Parameters Font value"
Go(*text.Parameters)//font?                        "Get *text.Parameters Font value"
Go(*text.Parameters)//line-height!                 "Set *text.Parameters LineHeight value"
Go(*text.Parameters)//line-height-scale!           "Set *text.Parameters LineHeightScale value"
Go(*text.Parameters)//line-height-scale?           "Get *text.Parameters LineHeightScale value"
Go(*text.Parameters)//line-height?                 "Get *text.Parameters LineHeight value"
Go(*text.Parameters)//locale!                      "Set *text.Parameters Locale value"
Go(*text.Parameters)//locale?                      "Get *text.Parameters Locale value"
Go(*text.Parameters)//max-lines!                   "Set *text.Parameters MaxLines value"
Go(*text.Parameters)//max-lines?                   "Get *text.Parameters MaxLines value"
Go(*text.Parameters)//max-width!                   "Set *text.Parameters MaxWidth value"
Go(*text.Parameters)//max-width?                   "Get *text.Parameters MaxWidth value"
Go(*text.Parameters)//min-width!                   "Set *text.Parameters MinWidth value"
Go(*text.Parameters)//min-width?                   "Get *text.Parameters MinWidth value"
Go(*text.Parameters)//px-per-em!                   "Set *text.Parameters PxPerEm value"
Go(*text.Parameters)//px-per-em?                   "Get *text.Parameters PxPerEm value"
Go(*text.Parameters)//truncator!                   "Set *text.Parameters Truncator value"
Go(*text.Parameters)//truncator?                   "Get *text.Parameters Truncator value"
Go(*text.Parameters)//wrap-policy!                 "Set *text.Parameters WrapPolicy value"
Go(*text.Parameters)//wrap-policy?                 "Get *text.Parameters WrapPolicy value"
Go(*text.Range)//count!                            "Set *text.Range Count value"
Go(*text.Range)//count?                            "Get *text.Range Count value"
Go(*text.Range)//offset!                           "Set *text.Range Offset value"
Go(*text.Range)//offset?                           "Get *text.Range Offset value"
Go(*text.Shaper)//bitmaps                          "(*text.Shaper).Bitmaps"
Go(*text.Shaper)//layout                           "(*text.Shaper).Layout"
Go(*text.Shaper)//layout-string                    "(*text.Shaper).LayoutString"
Go(*text.Shaper)//next-glyph                       "(*text.Shaper).NextGlyph"
Go(*text.Shaper)//shape                            "(*text.Shaper).Shape"
Go(*transfer.CancelEvent)//implements-event        "transfer.CancelEvent.ImplementsEvent"
Go(*transfer.DataEvent)//implements-event          "transfer.DataEvent.ImplementsEvent"
Go(*transfer.DataEvent)//open!                     "Set *transfer.DataEvent Open value"
Go(*transfer.DataEvent)//open?                     "Get *transfer.DataEvent Open value"
Go(*transfer.DataEvent)//type!                     "Set *transfer.DataEvent Type value"
Go(*transfer.DataEvent)//type?                     "Get *transfer.DataEvent Type value"
Go(*transfer.InitiateEvent)//implements-event      "transfer.InitiateEvent.ImplementsEvent"
Go(*transfer.OfferCmd)//data!                      "Set *transfer.OfferCmd Data value"
Go(*transfer.OfferCmd)//data?                      "Get *transfer.OfferCmd Data value"
Go(*transfer.OfferCmd)//implements-command         "transfer.OfferCmd.ImplementsCommand"
Go(*transfer.OfferCmd)//tag!                       "Set *transfer.OfferCmd Tag value"
Go(*transfer.OfferCmd)//tag?                       "Get *transfer.OfferCmd Tag value"
Go(*transfer.OfferCmd)//type!                      "Set *transfer.OfferCmd Type value"
Go(*transfer.OfferCmd)//type?                      "Get *transfer.OfferCmd Type value"
Go(*transfer.RequestEvent)//implements-event       "transfer.RequestEvent.ImplementsEvent"
Go(*transfer.RequestEvent)//type!                  "Set *transfer.RequestEvent Type value"
Go(*transfer.RequestEvent)//type?                  "Get *transfer.RequestEvent Type value"
Go(*transfer.SourceFilter)//implements-filter      "transfer.SourceFilter.ImplementsFilter"
Go(*transfer.SourceFilter)//target!                "Set *transfer.SourceFilter Target value"
Go(*transfer.SourceFilter)//target?                "Get *transfer.SourceFilter Target value"
Go(*transfer.SourceFilter)//type!                  "Set *transfer.SourceFilter Type value"
Go(*transfer.SourceFilter)//type?                  "Get *transfer.SourceFilter Type value"
Go(*transfer.TargetFilter)//implements-filter      "transfer.TargetFilter.ImplementsFilter"
Go(*transfer.TargetFilter)//target!                "Set *transfer.TargetFilter Target value"
Go(*transfer.TargetFilter)//target?                "Get *transfer.TargetFilter Target value"
Go(*transfer.TargetFilter)//type!                  "Set *transfer.TargetFilter Type value"
Go(*transfer.TargetFilter)//type?                  "Get *transfer.TargetFilter Type value"
Go(*unit.Metric)//dp                               "unit.Metric.Dp"
Go(*unit.Metric)//dp-to-sp                         "unit.Metric.DpToSp"
Go(*unit.Metric)//px-per-dp!                       "Set *unit.Metric PxPerDp value"
Go(*unit.Metric)//px-per-dp?                       "Get *unit.Metric PxPerDp value"
Go(*unit.Metric)//px-per-sp!                       "Set *unit.Metric PxPerSp value"
Go(*unit.Metric)//px-per-sp?                       "Get *unit.Metric PxPerSp value"
Go(*unit.Metric)//px-to-dp                         "unit.Metric.PxToDp"
Go(*unit.Metric)//px-to-sp                         "unit.Metric.PxToSp"
Go(*unit.Metric)//sp                               "unit.Metric.Sp"
Go(*unit.Metric)//sp-to-dp                         "unit.Metric.SpToDp"
Go(*widget.Bool)//history                          "(*widget.Bool).History"
Go(*widget.Bool)//hovered                          "(*widget.Bool).Hovered"
Go(*widget.Bool)//layout                           "(*widget.Bool).Layout"
Go(*widget.Bool)//pressed                          "(*widget.Bool).Pressed"
Go(*widget.Bool)//update                           "(*widget.Bool).Update"
Go(*widget.Bool)//value!                           "Set *widget.Bool Value value"
Go(*widget.Bool)//value?                           "Get *widget.Bool Value value"
Go(*widget.Border)//color!                         "Set *widget.Border Color value"
Go(*widget.Border)//color?                         "Get *widget.Border Color value"
Go(*widget.Border)//corner-radius!                 "Set *widget.Border CornerRadius value"
Go(*widget.Border)//corner-radius?                 "Get *widget.Border CornerRadius value"
Go(*widget.Border)//layout                         "widget.Border.Layout"
Go(*widget.Border)//width!                         "Set *widget.Border Width value"
Go(*widget.Border)//width?                         "Get *widget.Border Width value"
Go(*widget.Click)//modifiers!                      "Set *widget.Click Modifiers value"
Go(*widget.Click)//modifiers?                      "Get *widget.Click Modifiers value"
Go(*widget.Click)//num-clicks!                     "Set *widget.Click NumClicks value"
Go(*widget.Click)//num-clicks?                     "Get *widget.Click NumClicks value"
Go(*widget.Clickable)//click                       "(*widget.Clickable).Click"
Go(*widget.Clickable)//clicked                     "(*widget.Clickable).Clicked"
Go(*widget.Clickable)//history                     "(*widget.Clickable).History"
Go(*widget.Clickable)//hovered                     "(*widget.Clickable).Hovered"
Go(*widget.Clickable)//layout                      "(*widget.Clickable).Layout"
Go(*widget.Clickable)//pressed                     "(*widget.Clickable).Pressed"
Go(*widget.Clickable)//update                      "(*widget.Clickable).Update"
Go(*widget.Decorations)//clickable                 "(*widget.Decorations).Clickable"
Go(*widget.Decorations)//layout-move               "(*widget.Decorations).LayoutMove"
Go(*widget.Decorations)//maximized                 "(*widget.Decorations).Maximized"
Go(*widget.Decorations)//perform                   "(*widget.Decorations).Perform"
Go(*widget.Decorations)//update                    "(*widget.Decorations).Update"
Go(*widget.Draggable)//dragging                    "(*widget.Draggable).Dragging"
Go(*widget.Draggable)//layout                      "(*widget.Draggable).Layout"
Go(*widget.Draggable)//offer                       "(*widget.Draggable).Offer"
Go(*widget.Draggable)//pos                         "(*widget.Draggable).Pos"
Go(*widget.Draggable)//type!                       "Set *widget.Draggable Type value"
Go(*widget.Draggable)//type?                       "Get *widget.Draggable Type value"
Go(*widget.Draggable)//update                      "(*widget.Draggable).Update"
Go(*widget.Editor)//alignment!                     "Set *widget.Editor Alignment value"
Go(*widget.Editor)//alignment?                     "Get *widget.Editor Alignment value"
Go(*widget.Editor)//caret-coords                   "(*widget.Editor).CaretCoords"
Go(*widget.Editor)//caret-pos                      "(*widget.Editor).CaretPos"
Go(*widget.Editor)//clear-selection                "(*widget.Editor).ClearSelection"
Go(*widget.Editor)//delete                         "(*widget.Editor).Delete"
Go(*widget.Editor)//filter!                        "Set *widget.Editor Filter value"
Go(*widget.Editor)//filter?                        "Get *widget.Editor Filter value"
Go(*widget.Editor)//input-hint!                    "Set *widget.Editor InputHint value"
Go(*widget.Editor)//input-hint?                    "Get *widget.Editor InputHint value"
Go(*widget.Editor)//insert                         "(*widget.Editor).Insert"
Go(*widget.Editor)//len                            "(*widget.Editor).Len"
Go(*widget.Editor)//line-height!                   "Set *widget.Editor LineHeight value"
Go(*widget.Editor)//line-height-scale!             "Set *widget.Editor LineHeightScale value"
Go(*widget.Editor)//line-height-scale?             "Get *widget.Editor LineHeightScale value"
Go(*widget.Editor)//line-height?                   "Get *widget.Editor LineHeight value"
Go(*widget.Editor)//mask!                          "Set *widget.Editor Mask value"
Go(*widget.Editor)//mask?                          "Get *widget.Editor Mask value"
Go(*widget.Editor)//max-len!                       "Set *widget.Editor MaxLen value"
Go(*widget.Editor)//max-len?                       "Get *widget.Editor MaxLen value"
Go(*widget.Editor)//move-caret                     "(*widget.Editor).MoveCaret"
Go(*widget.Editor)//read                           "(*widget.Editor).Read"
Go(*widget.Editor)//read-only!                     "Set *widget.Editor ReadOnly value"
Go(*widget.Editor)//read-only?                     "Get *widget.Editor ReadOnly value"
Go(*widget.Editor)//regions                        "(*widget.Editor).Regions"
Go(*widget.Editor)//seek                           "(*widget.Editor).Seek"
Go(*widget.Editor)//selected-text                  "(*widget.Editor).SelectedText"
Go(*widget.Editor)//selection                      "(*widget.Editor).Selection"
Go(*widget.Editor)//selection-len                  "(*widget.Editor).SelectionLen"
Go(*widget.Editor)//set-caret                      "(*widget.Editor).SetCaret"
Go(*widget.Editor)//set-text                       "(*widget.Editor).SetText"
Go(*widget.Editor)//single-line!                   "Set *widget.Editor SingleLine value"
Go(*widget.Editor)//single-line?                   "Get *widget.Editor SingleLine value"
Go(*widget.Editor)//submit!                        "Set *widget.Editor Submit value"
Go(*widget.Editor)//submit?                        "Get *widget.Editor Submit value"
Go(*widget.Editor)//text                           "(*widget.Editor).Text"
Go(*widget.Editor)//update                         "(*widget.Editor).Update"
Go(*widget.Editor)//wrap-policy!                   "Set *widget.Editor WrapPolicy value"
Go(*widget.Editor)//wrap-policy?                   "Get *widget.Editor WrapPolicy value"
Go(*widget.Editor)//write-to                       "(*widget.Editor).WriteTo"
Go(*widget.Enum)//focused                          "(*widget.Enum).Focused"
Go(*widget.Enum)//hovered                          "(*widget.Enum).Hovered"
Go(*widget.Enum)//layout                           "(*widget.Enum).Layout"
Go(*widget.Enum)//update                           "(*widget.Enum).Update"
Go(*widget.Enum)//value!                           "Set *widget.Enum Value value"
Go(*widget.Enum)//value?                           "Get *widget.Enum Value value"
Go(*widget.Float)//dragging                        "(*widget.Float).Dragging"
Go(*widget.Float)//layout                          "(*widget.Float).Layout"
Go(*widget.Float)//update                          "(*widget.Float).Update"
Go(*widget.Float)//value!                          "Set *widget.Float Value value"
Go(*widget.Float)//value?                          "Get *widget.Float Value value"
Go(*widget.Icon)//layout                           "(*widget.Icon).Layout"
Go(*widget.Image)//fit!                            "Set *widget.Image Fit value"
Go(*widget.Image)//fit?                            "Get *widget.Image Fit value"
Go(*widget.Image)//layout                          "widget.Image.Layout"
Go(*widget.Image)//position!                       "Set *widget.Image Position value"
Go(*widget.Image)//position?                       "Get *widget.Image Position value"
Go(*widget.Image)//scale!                          "Set *widget.Image Scale value"
Go(*widget.Image)//scale?                          "Get *widget.Image Scale value"
Go(*widget.Image)//src!                            "Set *widget.Image Src value"
Go(*widget.Image)//src?                            "Get *widget.Image Src value"
Go(*widget.Label)//alignment!                      "Set *widget.Label Alignment value"
Go(*widget.Label)//alignment?                      "Get *widget.Label Alignment value"
Go(*widget.Label)//line-height!                    "Set *widget.Label LineHeight value"
Go(*widget.Label)//line-height-scale!              "Set *widget.Label LineHeightScale value"
Go(*widget.Label)//line-height-scale?              "Get *widget.Label LineHeightScale value"
Go(*widget.Label)//line-height?                    "Get *widget.Label LineHeight value"
Go(*widget.Label)//max-lines!                      "Set *widget.Label MaxLines value"
Go(*widget.Label)//max-lines?                      "Get *widget.Label MaxLines value"
Go(*widget.Label)//truncator!                      "Set *widget.Label Truncator value"
Go(*widget.Label)//truncator?                      "Get *widget.Label Truncator value"
Go(*widget.Label)//wrap-policy!                    "Set *widget.Label WrapPolicy value"
Go(*widget.Label)//wrap-policy?                    "Get *widget.Label WrapPolicy value"
Go(*widget.List)//add-drag                         "(*widget.List).AddDrag"
Go(*widget.List)//add-indicator                    "(*widget.List).AddIndicator"
Go(*widget.List)//add-track                        "(*widget.List).AddTrack"
Go(*widget.List)//alignment!                       "Set *widget.List Alignment value"
Go(*widget.List)//alignment?                       "Get *widget.List Alignment value"
Go(*widget.List)//axis!                            "Set *widget.List Axis value"
Go(*widget.List)//axis?                            "Get *widget.List Axis value"
Go(*widget.List)//indicator-hovered                "(*widget.List).IndicatorHovered"
Go(*widget.List)//layout                           "(*widget.List).Layout"
Go(*widget.List)//list!                            "Set *widget.List List value"
Go(*widget.List)//list?                            "Get *widget.List List value"
Go(*widget.List)//position!                        "Set *widget.List Position value"
Go(*widget.List)//position?                        "Get *widget.List Position value"
Go(*widget.List)//scroll-by                        "(*widget.List).ScrollBy"
Go(*widget.List)//scroll-distance                  "(*widget.List).ScrollDistance"
Go(*widget.List)//scroll-to                        "(*widget.List).ScrollTo"
Go(*widget.List)//scroll-to-end!                   "Set *widget.List ScrollToEnd value"
Go(*widget.List)//scroll-to-end?                   "Get *widget.List ScrollToEnd value"
Go(*widget.List)//scrollbar!                       "Set *widget.List Scrollbar value"
Go(*widget.List)//scrollbar?                       "Get *widget.List Scrollbar value"
Go(*widget.List)//track-hovered                    "(*widget.List).TrackHovered"
Go(*widget.List)//update                           "(*widget.List).Update"
Go(*widget.Press)//cancelled!                      "Set *widget.Press Cancelled value"
Go(*widget.Press)//cancelled?                      "Get *widget.Press Cancelled value"
Go(*widget.Press)//end!                            "Set *widget.Press End value"
Go(*widget.Press)//end?                            "Get *widget.Press End value"
Go(*widget.Press)//position!                       "Set *widget.Press Position value"
Go(*widget.Press)//position?                       "Get *widget.Press Position value"
Go(*widget.Press)//start!                          "Set *widget.Press Start value"
Go(*widget.Press)//start?                          "Get *widget.Press Start value"
Go(*widget.Region)//baseline!                      "Set *widget.Region Baseline value"
Go(*widget.Region)//baseline?                      "Get *widget.Region Baseline value"
Go(*widget.Region)//bounds!                        "Set *widget.Region Bounds value"
Go(*widget.Region)//bounds?                        "Get *widget.Region Bounds value"
Go(*widget.Scrollbar)//add-drag                    "(*widget.Scrollbar).AddDrag"
Go(*widget.Scrollbar)//add-indicator               "(*widget.Scrollbar).AddIndicator"
Go(*widget.Scrollbar)//add-track                   "(*widget.Scrollbar).AddTrack"
Go(*widget.Scrollbar)//dragging                    "(*widget.Scrollbar).Dragging"
Go(*widget.Scrollbar)//indicator-hovered           "(*widget.Scrollbar).IndicatorHovered"
Go(*widget.Scrollbar)//scroll-distance             "(*widget.Scrollbar).ScrollDistance"
Go(*widget.Scrollbar)//track-hovered               "(*widget.Scrollbar).TrackHovered"
Go(*widget.Scrollbar)//update                      "(*widget.Scrollbar).Update"
Go(*widget.Selectable)//alignment!                 "Set *widget.Selectable Alignment value"
Go(*widget.Selectable)//alignment?                 "Get *widget.Selectable Alignment value"
Go(*widget.Selectable)//clear-selection            "(*widget.Selectable).ClearSelection"
Go(*widget.Selectable)//focused                    "(*widget.Selectable).Focused"
Go(*widget.Selectable)//line-height!               "Set *widget.Selectable LineHeight value"
Go(*widget.Selectable)//line-height-scale!         "Set *widget.Selectable LineHeightScale value"
Go(*widget.Selectable)//line-height-scale?         "Get *widget.Selectable LineHeightScale value"
Go(*widget.Selectable)//line-height?               "Get *widget.Selectable LineHeight value"
Go(*widget.Selectable)//max-lines!                 "Set *widget.Selectable MaxLines value"
Go(*widget.Selectable)//max-lines?                 "Get *widget.Selectable MaxLines value"
Go(*widget.Selectable)//regions                    "(*widget.Selectable).Regions"
Go(*widget.Selectable)//selected-text              "(*widget.Selectable).SelectedText"
Go(*widget.Selectable)//selection                  "(*widget.Selectable).Selection"
Go(*widget.Selectable)//selection-len              "(*widget.Selectable).SelectionLen"
Go(*widget.Selectable)//set-caret                  "(*widget.Selectable).SetCaret"
Go(*widget.Selectable)//set-text                   "(*widget.Selectable).SetText"
Go(*widget.Selectable)//text                       "(*widget.Selectable).Text"
Go(*widget.Selectable)//truncated                  "(*widget.Selectable).Truncated"
Go(*widget.Selectable)//truncator!                 "Set *widget.Selectable Truncator value"
Go(*widget.Selectable)//truncator?                 "Get *widget.Selectable Truncator value"
Go(*widget.Selectable)//update                     "(*widget.Selectable).Update"
Go(*widget.Selectable)//wrap-policy!               "Set *widget.Selectable WrapPolicy value"
Go(*widget.Selectable)//wrap-policy?               "Get *widget.Selectable WrapPolicy value"
Go(*widget.SubmitEvent)//text!                     "Set *widget.SubmitEvent Text value"
Go(*widget.SubmitEvent)//text?                     "Get *widget.SubmitEvent Text value"
Go(*widget.TextInfo)//truncated!                   "Set *widget.TextInfo Truncated value"
Go(*widget.TextInfo)//truncated?                   "Get *widget.TextInfo Truncated value"
Go(app.Orientation)//option                        "app.Orientation.Option"
Go(app.Orientation)//string                        "app.Orientation.String"
Go(app.ViewEvent)//implements-event                "app.ViewEvent.ImplementsEvent"
Go(app.ViewEvent)//valid                           "app.ViewEvent.Valid"
Go(app.WindowMode)//option                         "app.WindowMode.Option"
Go(app.WindowMode)//string                         "app.WindowMode.String"
Go(clip.Ellipse)//op                               "clip.Ellipse.Op"
Go(clip.Ellipse)//path                             "clip.Ellipse.Path"
Go(clip.Ellipse)//push                             "clip.Ellipse.Push"
Go(clip.Rect)//op                                  "clip.Rect.Op"
Go(clip.Rect)//path                                "clip.Rect.Path"
Go(clip.Rect)//push                                "clip.Rect.Push"
Go(event.Event)//implements-event                  "event.Event.ImplementsEvent"
Go(event.Filter)//implements-filter                "event.Filter.ImplementsFilter"
Go(font.Face)//face                                "font.Face.Face"
Go(font.Style)//string                             "font.Style.String"
Go(font.Weight)//string                            "font.Weight.String"
Go(gesture.Axis)//string                           "gesture.Axis.String"
Go(gesture.ClickKind)//string                      "gesture.ClickKind.String"
Go(gesture.ScrollState)//string                    "gesture.ScrollState.String"
Go(gpu.GPU)//clear                                 "gpu.GPU.Clear"
Go(gpu.GPU)//frame                                 "gpu.GPU.Frame"
Go(gpu.GPU)//release                               "gpu.GPU.Release"
Go(input.Command)//implements-command              "input.Command.ImplementsCommand"
Go(input.SemanticGestures)//string                 "input.SemanticGestures.String"
Go(input.TextInputState)//string                   "input.TextInputState.String"
Go(key.Modifiers)//contain                         "key.Modifiers.Contain"
Go(key.Modifiers)//string                          "key.Modifiers.String"
Go(key.SelectionEvent)//implements-event           "key.SelectionEvent.ImplementsEvent"
Go(key.SnippetEvent)//implements-event             "key.SnippetEvent.ImplementsEvent"
Go(key.State)//string                              "key.State.String"
Go(layout.Alignment)//string                       "layout.Alignment.String"
Go(layout.Axis)//convert                           "layout.Axis.Convert"
Go(layout.Axis)//f-convert                         "layout.Axis.FConvert"
Go(layout.Axis)//string                            "layout.Axis.String"
Go(layout.Direction)//layout                       "layout.Direction.Layout"
Go(layout.Direction)//position                     "layout.Direction.Position"
Go(layout.Direction)//string                       "layout.Direction.String"
Go(layout.Spacing)//string                         "layout.Spacing.String"
Go(pointer.Buttons)//contain                       "pointer.Buttons.Contain"
Go(pointer.Buttons)//string                        "pointer.Buttons.String"
Go(pointer.Cursor)//add                            "pointer.Cursor.Add"
Go(pointer.Cursor)//string                         "pointer.Cursor.String"
Go(pointer.Kind)//string                           "pointer.Kind.String"
Go(pointer.Priority)//string                       "pointer.Priority.String"
Go(pointer.Source)//string                         "pointer.Source.String"
Go(semantic.ClassOp)//add                          "semantic.ClassOp.Add"
Go(semantic.ClassOp)//string                       "semantic.ClassOp.String"
Go(semantic.DescriptionOp)//add                    "semantic.DescriptionOp.Add"
Go(semantic.EnabledOp)//add                        "semantic.EnabledOp.Add"
Go(semantic.LabelOp)//add                          "semantic.LabelOp.Add"
Go(semantic.SelectedOp)//add                       "semantic.SelectedOp.Add"
Go(system.Action)//string                          "system.Action.String"
Go(system.ActionInputOp)//add                      "system.ActionInputOp.Add"
Go(system.TextDirection)//axis                     "system.TextDirection.Axis"
Go(system.TextDirection)//progression              "system.TextDirection.Progression"
Go(system.TextDirection)//string                   "system.TextDirection.String"
Go(text.Alignment)//align                          "text.Alignment.Align"
Go(text.Alignment)//string                         "text.Alignment.String"
Go(text.Flags)//string                             "text.Flags.String"
app-any-orientation                                "Get app.AnyOrientation value"
app-custom-renderer                                "app.CustomRenderer"
app-data-dir                                       "app.DataDir"
app-decorated                                      "app.Decorated"
app-fullscreen                                     "Get app.Fullscreen value"
app-landscape-orientation                          "Get app.LandscapeOrientation value"
app-main                                           "app.Main"
app-max-size                                       "app.MaxSize"
app-maximized                                      "Get app.Maximized value"
app-min-size                                       "app.MinSize"
app-minimized                                      "Get app.Minimized value"
app-navigation-color                               "app.NavigationColor"
app-new-config                                     "Create a new app.Config struct"
app-new-config-event                               "Create a new app.ConfigEvent struct"
app-new-context                                    "app.NewContext"
app-new-destroy-event                              "Create a new app.DestroyEvent struct"
app-new-frame-event                                "Create a new app.FrameEvent struct"
app-new-insets                                     "Create a new app.Insets struct"
app-new-window                                     "Create a new app.Window struct"
app-portrait-orientation                           "Get app.PortraitOrientation value"
app-size                                           "app.Size"
app-status-color                                   "app.StatusColor"
app-title                                          "app.Title"
app-windowed                                       "Get app.Windowed value"
clip-new-op                                        "Create a new clip.Op struct"
clip-new-outline                                   "Create a new clip.Outline struct"
clip-new-path                                      "Create a new clip.Path struct"
clip-new-path-spec                                 "Create a new clip.PathSpec struct"
clip-new-r-rect                                    "Create a new clip.RRect struct"
clip-new-stack                                     "Create a new clip.Stack struct"
clip-new-stroke                                    "Create a new clip.Stroke struct"
clip-uniform-r-rect                                "clip.UniformRRect"
clipboard-new-read-cmd                             "Create a new clipboard.ReadCmd struct"
clipboard-new-write-cmd                            "Create a new clipboard.WriteCmd struct"
event-op                                           "event.Op"
f-32-new-affine-2-d                                "Create a new f32.Affine2D struct"
f-32-new-point                                     "Create a new f32.Point struct"
f-32-pt                                            "f32.Pt"
font-black                                         "Get font.Black value"
font-bold                                          "Get font.Bold value"
font-extra-bold                                    "Get font.ExtraBold value"
font-extra-light                                   "Get font.ExtraLight value"
font-italic                                        "Get font.Italic value"
font-light                                         "Get font.Light value"
font-medium                                        "Get font.Medium value"
font-new-font                                      "Create a new font.Font struct"
font-new-font-face                                 "Create a new font.FontFace struct"
font-normal                                        "Get font.Normal value"
font-regular                                       "Get font.Regular value"
font-semi-bold                                     "Get font.SemiBold value"
font-thin                                          "Get font.Thin value"
gesture-both                                       "Get gesture.Both value"
gesture-horizontal                                 "Get gesture.Horizontal value"
gesture-kind-cancel                                "Get gesture.KindCancel value"
gesture-kind-click                                 "Get gesture.KindClick value"
gesture-kind-press                                 "Get gesture.KindPress value"
gesture-new-click                                  "Create a new gesture.Click struct"
gesture-new-click-event                            "Create a new gesture.ClickEvent struct"
gesture-new-drag                                   "Create a new gesture.Drag struct"
gesture-new-hover                                  "Create a new gesture.Hover struct"
gesture-new-scroll                                 "Create a new gesture.Scroll struct"
gesture-state-dragging                             "Get gesture.StateDragging value"
gesture-state-flinging                             "Get gesture.StateFlinging value"
gesture-state-idle                                 "Get gesture.StateIdle value"
gesture-vertical                                   "Get gesture.Vertical value"
gofont-collection                                  "gofont.Collection"
gofont-regular                                     "gofont.Regular"
gpu-new                                            "gpu.New"
gpu-new-fbo                                        "Create a new gpu.FBO struct"
headless-new-window                                "headless.NewWindow"
input-click-gesture                                "Get input.ClickGesture value"
input-new-editor-state                             "Create a new input.EditorState struct"
input-new-router                                   "Create a new input.Router struct"
input-new-semantic-desc                            "Create a new input.SemanticDesc struct"
input-new-semantic-node                            "Create a new input.SemanticNode struct"
input-new-source                                   "Create a new input.Source struct"
input-new-system-event                             "Create a new input.SystemEvent struct"
input-scroll-gesture                               "Get input.ScrollGesture value"
input-text-input-close                             "Get input.TextInputClose value"
input-text-input-keep                              "Get input.TextInputKeep value"
input-text-input-open                              "Get input.TextInputOpen value"
key-focus-backward                                 "Get key.FocusBackward value"
key-focus-down                                     "Get key.FocusDown value"
key-focus-forward                                  "Get key.FocusForward value"
key-focus-left                                     "Get key.FocusLeft value"
key-focus-right                                    "Get key.FocusRight value"
key-focus-up                                       "Get key.FocusUp value"
key-hint-any                                       "Get key.HintAny value"
key-hint-email                                     "Get key.HintEmail value"
key-hint-numeric                                   "Get key.HintNumeric value"
key-hint-password                                  "Get key.HintPassword value"
key-hint-telephone                                 "Get key.HintTelephone value"
key-hint-text                                      "Get key.HintText value"
key-hint-url                                       "Get key.HintURL value"
key-mod-alt                                        "Get key.ModAlt value"
key-mod-command                                    "Get key.ModCommand value"
key-mod-ctrl                                       "Get key.ModCtrl value"
key-mod-shift                                      "Get key.ModShift value"
key-mod-super                                      "Get key.ModSuper value"
key-name-alt                                       "Get key.NameAlt value"
key-name-back                                      "Get key.NameBack value"
key-name-command                                   "Get key.NameCommand value"
key-name-ctrl                                      "Get key.NameCtrl value"
key-name-delete-backward                           "Get key.NameDeleteBackward value"
key-name-delete-forward                            "Get key.NameDeleteForward value"
key-name-down-arrow                                "Get key.NameDownArrow value"
key-name-end                                       "Get key.NameEnd value"
key-name-enter                                     "Get key.NameEnter value"
key-name-escape                                    "Get key.NameEscape value"
key-name-f-1                                       "Get key.NameF1 value"
key-name-f-10                                      "Get key.NameF10 value"
key-name-f-11                                      "Get key.NameF11 value"
key-name-f-12                                      "Get key.NameF12 value"
key-name-f-2                                       "Get key.NameF2 value"
key-name-f-3                                       "Get key.NameF3 value"
key-name-f-4                                       "Get key.NameF4 value"
key-name-f-5                                       "Get key.NameF5 value"
key-name-f-6                                       "Get key.NameF6 value"
key-name-f-7                                       "Get key.NameF7 value"
key-name-f-8                                       "Get key.NameF8 value"
key-name-f-9                                       "Get key.NameF9 value"
key-name-home                                      "Get key.NameHome value"
key-name-left-arrow                                "Get key.NameLeftArrow value"
key-name-page-down                                 "Get key.NamePageDown value"
key-name-page-up                                   "Get key.NamePageUp value"
key-name-return                                    "Get key.NameReturn value"
key-name-right-arrow                               "Get key.NameRightArrow value"
key-name-shift                                     "Get key.NameShift value"
key-name-space                                     "Get key.NameSpace value"
key-name-super                                     "Get key.NameSuper value"
key-name-tab                                       "Get key.NameTab value"
key-name-up-arrow                                  "Get key.NameUpArrow value"
key-new-caret                                      "Create a new key.Caret struct"
key-new-edit-event                                 "Create a new key.EditEvent struct"
key-new-event                                      "Create a new key.Event struct"
key-new-filter                                     "Create a new key.Filter struct"
key-new-focus-cmd                                  "Create a new key.FocusCmd struct"
key-new-focus-event                                "Create a new key.FocusEvent struct"
key-new-focus-filter                               "Create a new key.FocusFilter struct"
key-new-input-hint-op                              "Create a new key.InputHintOp struct"
key-new-range                                      "Create a new key.Range struct"
key-new-selection-cmd                              "Create a new key.SelectionCmd struct"
key-new-snippet                                    "Create a new key.Snippet struct"
key-new-snippet-cmd                                "Create a new key.SnippetCmd struct"
key-new-soft-keyboard-cmd                          "Create a new key.SoftKeyboardCmd struct"
key-press                                          "Get key.Press value"
key-release                                        "Get key.Release value"
layout-baseline                                    "Get layout.Baseline value"
layout-center                                      "Get layout.Center value"
layout-e                                           "Get layout.E value"
layout-end                                         "Get layout.End value"
layout-exact                                       "layout.Exact"
layout-expanded                                    "layout.Expanded"
layout-f-pt                                        "layout.FPt"
layout-flexed                                      "layout.Flexed"
layout-horizontal                                  "Get layout.Horizontal value"
layout-middle                                      "Get layout.Middle value"
layout-n                                           "Get layout.N value"
layout-ne                                          "Get layout.NE value"
layout-new-background                              "Create a new layout.Background struct"
layout-new-constraints                             "Create a new layout.Constraints struct"
layout-new-context                                 "Create a new layout.Context struct"
layout-new-dimensions                              "Create a new layout.Dimensions struct"
layout-new-flex                                    "Create a new layout.Flex struct"
layout-new-flex-child                              "Create a new layout.FlexChild struct"
layout-new-inset                                   "Create a new layout.Inset struct"
layout-new-list                                    "Create a new layout.List struct"
layout-new-position                                "Create a new layout.Position struct"
layout-new-spacer                                  "Create a new layout.Spacer struct"
layout-new-stack                                   "Create a new layout.Stack struct"
layout-new-stack-child                             "Create a new layout.StackChild struct"
layout-nw                                          "Get layout.NW value"
layout-rigid                                       "layout.Rigid"
layout-s                                           "Get layout.S value"
layout-se                                          "Get layout.SE value"
layout-space-around                                "Get layout.SpaceAround value"
layout-space-between                               "Get layout.SpaceBetween value"
layout-space-end                                   "Get layout.SpaceEnd value"
layout-space-evenly                                "Get layout.SpaceEvenly value"
layout-space-sides                                 "Get layout.SpaceSides value"
layout-space-start                                 "Get layout.SpaceStart value"
layout-stacked                                     "layout.Stacked"
layout-start                                       "Get layout.Start value"
layout-sw                                          "Get layout.SW value"
layout-uniform-inset                               "layout.UniformInset"
layout-vertical                                    "Get layout.Vertical value"
layout-w                                           "Get layout.W value"
material-body-1                                    "material.Body1"
material-body-2                                    "material.Body2"
material-button                                    "material.Button"
material-button-layout                             "material.ButtonLayout"
material-caption                                   "material.Caption"
material-check-box                                 "material.CheckBox"
material-clickable                                 "material.Clickable"
material-decorations                               "material.Decorations"
material-editor                                    "material.Editor"
material-h-1                                       "material.H1"
material-h-2                                       "material.H2"
material-h-3                                       "material.H3"
material-h-4                                       "material.H4"
material-h-5                                       "material.H5"
material-h-6                                       "material.H6"
material-icon-button                               "material.IconButton"
material-label                                     "material.Label"
material-list                                      "material.List"
material-loader                                    "material.Loader"
material-new-button-layout-style                   "Create a new material.ButtonLayoutStyle struct"
material-new-button-style                          "Create a new material.ButtonStyle struct"
material-new-check-box-style                       "Create a new material.CheckBoxStyle struct"
material-new-decorations-style                     "Create a new material.DecorationsStyle struct"
material-new-editor-style                          "Create a new material.EditorStyle struct"
material-new-icon-button-style                     "Create a new material.IconButtonStyle struct"
material-new-label-style                           "Create a new material.LabelStyle struct"
material-new-list-style                            "Create a new material.ListStyle struct"
material-new-loader-style                          "Create a new material.LoaderStyle struct"
material-new-palette                               "Create a new material.Palette struct"
material-new-progress-bar-style                    "Create a new material.ProgressBarStyle struct"
material-new-progress-circle-style                 "Create a new material.ProgressCircleStyle struct"
material-new-radio-button-style                    "Create a new material.RadioButtonStyle struct"
material-new-scroll-indicator-style                "Create a new material.ScrollIndicatorStyle struct"
material-new-scroll-track-style                    "Create a new material.ScrollTrackStyle struct"
material-new-scrollbar-style                       "Create a new material.ScrollbarStyle struct"
material-new-slider-style                          "Create a new material.SliderStyle struct"
material-new-switch-style                          "Create a new material.SwitchStyle struct"
material-new-theme                                 "material.NewTheme"
material-occupy                                    "Get material.Occupy value"
material-overlay                                   "Get material.Overlay value"
material-overline                                  "material.Overline"
material-progress-bar                              "material.ProgressBar"
material-progress-circle                           "material.ProgressCircle"
material-radio-button                              "material.RadioButton"
material-scrollbar                                 "material.Scrollbar"
material-slider                                    "material.Slider"
material-subtitle-1                                "material.Subtitle1"
material-subtitle-2                                "material.Subtitle2"
material-switch                                    "material.Switch"
op-affine                                          "op.Affine"
op-defer                                           "op.Defer"
op-new-call-op                                     "Create a new op.CallOp struct"
op-new-invalidate-cmd                              "Create a new op.InvalidateCmd struct"
op-new-macro-op                                    "Create a new op.MacroOp struct"
op-new-ops                                         "Create a new op.Ops struct"
op-new-transform-op                                "Create a new op.TransformOp struct"
op-new-transform-stack                             "Create a new op.TransformStack struct"
op-offset                                          "op.Offset"
op-record                                          "op.Record"
opentype-description-to-font                       "opentype.DescriptionToFont"
opentype-font-to-description                       "opentype.FontToDescription"
opentype-new-face                                  "Create a new opentype.Face struct"
opentype-parse                                     "opentype.Parse"
opentype-parse-collection                          "opentype.ParseCollection"
paint-fill                                         "paint.Fill"
paint-fill-shape                                   "paint.FillShape"
paint-filter-linear                                "Get paint.FilterLinear value"
paint-filter-nearest                               "Get paint.FilterNearest value"
paint-new-color-op                                 "Create a new paint.ColorOp struct"
paint-new-image-op                                 "paint.NewImageOp"
paint-new-linear-gradient-op                       "Create a new paint.LinearGradientOp struct"
paint-new-opacity-stack                            "Create a new paint.OpacityStack struct"
paint-new-paint-op                                 "Create a new paint.PaintOp struct"
paint-push-opacity                                 "paint.PushOpacity"
pointer-button-primary                             "Get pointer.ButtonPrimary value"
pointer-button-secondary                           "Get pointer.ButtonSecondary value"
pointer-button-tertiary                            "Get pointer.ButtonTertiary value"
pointer-cancel                                     "Get pointer.Cancel value"
pointer-cursor-all-scroll                          "Get pointer.CursorAllScroll value"
pointer-cursor-col-resize                          "Get pointer.CursorColResize value"
pointer-cursor-crosshair                           "Get pointer.CursorCrosshair value"
pointer-cursor-default                             "Get pointer.CursorDefault value"
pointer-cursor-east-resize                         "Get pointer.CursorEastResize value"
pointer-cursor-east-west-resize                    "Get pointer.CursorEastWestResize value"
pointer-cursor-grab                                "Get pointer.CursorGrab value"
pointer-cursor-grabbing                            "Get pointer.CursorGrabbing value"
pointer-cursor-none                                "Get pointer.CursorNone value"
pointer-cursor-north-east-resize                   "Get pointer.CursorNorthEastResize value"
pointer-cursor-north-east-south-west-resize        "Get pointer.CursorNorthEastSouthWestResize value"
pointer-cursor-north-resize                        "Get pointer.CursorNorthResize value"
pointer-cursor-north-south-resize                  "Get pointer.CursorNorthSouthResize value"
pointer-cursor-north-west-resize                   "Get pointer.CursorNorthWestResize value"
pointer-cursor-north-west-south-east-resize        "Get pointer.CursorNorthWestSouthEastResize value"
pointer-cursor-not-allowed                         "Get pointer.CursorNotAllowed value"
pointer-cursor-pointer                             "Get pointer.CursorPointer value"
pointer-cursor-progress                            "Get pointer.CursorProgress value"
pointer-cursor-row-resize                          "Get pointer.CursorRowResize value"
pointer-cursor-south-east-resize                   "Get pointer.CursorSouthEastResize value"
pointer-cursor-south-resize                        "Get pointer.CursorSouthResize value"
pointer-cursor-south-west-resize                   "Get pointer.CursorSouthWestResize value"
pointer-cursor-text                                "Get pointer.CursorText value"
pointer-cursor-vertical-text                       "Get pointer.CursorVerticalText value"
pointer-cursor-wait                                "Get pointer.CursorWait value"
pointer-cursor-west-resize                         "Get pointer.CursorWestResize value"
pointer-drag                                       "Get pointer.Drag value"
pointer-enter                                      "Get pointer.Enter value"
pointer-foremost                                   "Get pointer.Foremost value"
pointer-grabbed                                    "Get pointer.Grabbed value"
pointer-leave                                      "Get pointer.Leave value"
pointer-mouse                                      "Get pointer.Mouse value"
pointer-move                                       "Get pointer.Move value"
pointer-new-event                                  "Create a new pointer.Event struct"
pointer-new-filter                                 "Create a new pointer.Filter struct"
pointer-new-grab-cmd                               "Create a new pointer.GrabCmd struct"
pointer-new-pass-op                                "Create a new pointer.PassOp struct"
pointer-new-pass-stack                             "Create a new pointer.PassStack struct"
pointer-new-scroll-range                           "Create a new pointer.ScrollRange struct"
pointer-press                                      "Get pointer.Press value"
pointer-release                                    "Get pointer.Release value"
pointer-scroll                                     "Get pointer.Scroll value"
pointer-shared                                     "Get pointer.Shared value"
pointer-touch                                      "Get pointer.Touch value"
semantic-button                                    "Get semantic.Button value"
semantic-check-box                                 "Get semantic.CheckBox value"
semantic-editor                                    "Get semantic.Editor value"
semantic-radio-button                              "Get semantic.RadioButton value"
semantic-switch                                    "Get semantic.Switch value"
semantic-unknown                                   "Get semantic.Unknown value"
system-action-center                               "Get system.ActionCenter value"
system-action-close                                "Get system.ActionClose value"
system-action-fullscreen                           "Get system.ActionFullscreen value"
system-action-maximize                             "Get system.ActionMaximize value"
system-action-minimize                             "Get system.ActionMinimize value"
system-action-move                                 "Get system.ActionMove value"
system-action-raise                                "Get system.ActionRaise value"
system-action-unmaximize                           "Get system.ActionUnmaximize value"
system-from-origin                                 "Get system.FromOrigin value"
system-horizontal                                  "Get system.Horizontal value"
system-ltr                                         "Get system.LTR value"
system-new-locale                                  "Create a new system.Locale struct"
system-rtl                                         "Get system.RTL value"
system-toward-origin                               "Get system.TowardOrigin value"
system-vertical                                    "Get system.Vertical value"
text-end                                           "Get text.End value"
text-flag-cluster-break                            "Get text.FlagClusterBreak value"
text-flag-line-break                               "Get text.FlagLineBreak value"
text-flag-paragraph-break                          "Get text.FlagParagraphBreak value"
text-flag-paragraph-start                          "Get text.FlagParagraphStart value"
text-flag-run-break                                "Get text.FlagRunBreak value"
text-flag-toward-origin                            "Get text.FlagTowardOrigin value"
text-flag-truncator                                "Get text.FlagTruncator value"
text-middle                                        "Get text.Middle value"
text-new-glyph                                     "Create a new text.Glyph struct"
text-new-parameters                                "Create a new text.Parameters struct"
text-new-range                                     "Create a new text.Range struct"
text-new-shaper                                    "text.NewShaper"
text-no-system-fonts                               "text.NoSystemFonts"
text-start                                         "Get text.Start value"
text-with-collection                               "text.WithCollection"
text-wrap-graphemes                                "Get text.WrapGraphemes value"
text-wrap-heuristically                            "Get text.WrapHeuristically value"
text-wrap-words                                    "Get text.WrapWords value"
transfer-new-cancel-event                          "Create a new transfer.CancelEvent struct"
transfer-new-data-event                            "Create a new transfer.DataEvent struct"
transfer-new-initiate-event                        "Create a new transfer.InitiateEvent struct"
transfer-new-offer-cmd                             "Create a new transfer.OfferCmd struct"
transfer-new-request-event                         "Create a new transfer.RequestEvent struct"
transfer-new-source-filter                         "Create a new transfer.SourceFilter struct"
transfer-new-target-filter                         "Create a new transfer.TargetFilter struct"
unit-new-metric                                    "Create a new unit.Metric struct"
widget-contain                                     "Get widget.Contain value"
widget-cover                                       "Get widget.Cover value"
widget-fill                                        "Get widget.Fill value"
widget-new-bool                                    "Create a new widget.Bool struct"
widget-new-border                                  "Create a new widget.Border struct"
widget-new-change-event                            "Create a new widget.ChangeEvent struct"
widget-new-click                                   "Create a new widget.Click struct"
widget-new-clickable                               "Create a new widget.Clickable struct"
widget-new-decorations                             "Create a new widget.Decorations struct"
widget-new-draggable                               "Create a new widget.Draggable struct"
widget-new-editor                                  "Create a new widget.Editor struct"
widget-new-enum                                    "Create a new widget.Enum struct"
widget-new-float                                   "Create a new widget.Float struct"
widget-new-icon                                    "widget.NewIcon"
widget-new-image                                   "Create a new widget.Image struct"
widget-new-label                                   "Create a new widget.Label struct"
widget-new-list                                    "Create a new widget.List struct"
widget-new-press                                   "Create a new widget.Press struct"
widget-new-region                                  "Create a new widget.Region struct"
widget-new-scrollbar                               "Create a new widget.Scrollbar struct"
widget-new-select-event                            "Create a new widget.SelectEvent struct"
widget-new-selectable                              "Create a new widget.Selectable struct"
widget-new-submit-event                            "Create a new widget.SubmitEvent struct"
widget-new-text-info                               "Create a new widget.TextInfo struct"
widget-scale-down                                  "Get widget.ScaleDown value"
widget-unscaled                                    "Get widget.Unscaled value"

[disabled]
