// SPDX-License-Identifier: Unlicense OR MIT

#version 450

layout(local_size_x = 4, local_size_y = 3, local_size_z = 1) in;

layout(set = 0, binding = 0) buffer Buf {
	uint[] buf;
};

layout(rgba8, set = 0, binding = 1) uniform writeonly image2D image;

shared uint blah;

void main() {
	uint global_idx = gl_WorkGroupID.z * gl_NumWorkGroups.x * gl_NumWorkGroups.y + gl_WorkGroupID.y * gl_NumWorkGroups.x + gl_WorkGroupID.x;
	uint idx = global_idx*(gl_WorkGroupSize.x*gl_WorkGroupSize.y*gl_WorkGroupSize.z) + gl_LocalInvocationIndex;
	if (idx < buf.length()) {
		buf[idx] = idx+1;
		atomicAdd(blah, 1);
		//atomicAdd(buf[idx], 1);
	}
	barrier();
	/*if (idx < buf.length()) {
		buf[idx] *= 5 + blah;
	}*/
	imageStore(image, ivec2(gl_LocalInvocationID.x, gl_LocalInvocationID.y), vec4(0.0, 1.0, 1.0, 1.0));
}
